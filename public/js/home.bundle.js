/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/home.js":
/*!************************!*\
  !*** ./src/js/home.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_app_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/app.js */ \"./src/js/modules/app.js\");\n/* harmony import */ var _modules_eventHandler_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/eventHandler.js */ \"./src/js/modules/eventHandler.js\");\n\r\n\r\n\r\n// UI\r\nconst overlay = document.querySelector(\".overlay\");\r\n\r\nfunction _init() {\r\n    if(_modules_app_js__WEBPACK_IMPORTED_MODULE_0__.user.isLogin()) {\r\n        _modules_app_js__WEBPACK_IMPORTED_MODULE_0__.user.onLogin();\r\n    } else {\r\n        _modules_app_js__WEBPACK_IMPORTED_MODULE_0__.user.onLogout();\r\n    }\r\n\r\n    setDimension();\r\n}\r\n\r\nfunction setDimension() {\r\n    const nav  = document.querySelector(\".nav\");\r\n    const hero = document.querySelector(\".hero\");\r\n\r\n    // set hero dimension\r\n    const nav_height = nav.getBoundingClientRect().height;\r\n\r\n    hero.style.height = `calc(100vh - ${nav_height}px)`;\r\n}\r\n\r\n// EVENT\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    _init();\r\n});\r\n\r\nwindow.addEventListener(\"click\", event => {\r\n    const target = event.target;\r\n\r\n    // account bar\r\n    if(target.classList.contains(\"account-ctr\") || target.matches(\".overlay.account\")) {\r\n        const accountSettings = target.parentElement.querySelector(\".account-settings-ctr\");\r\n\r\n        accountSettings.classList.toggle(\"show\");\r\n        target.classList.toggle(\"from-overlay\");\r\n\r\n        overlay.classList.toggle(\"active\");\r\n        overlay.classList.toggle(\"account\");\r\n    }\r\n\r\n    // signout btn\r\n    if(target.classList.contains(\"signout-btn\") && _modules_app_js__WEBPACK_IMPORTED_MODULE_0__.user.isLogin()) {\r\n        window.localStorage.removeItem(\"colorant_user\");\r\n        window.location.reload()\r\n    }\r\n\r\n    // menu btn\r\n    if(target.classList.contains(\"btn-menu\") || target.classList.contains(\"btn-close-nav\")) {\r\n        _modules_eventHandler_js__WEBPACK_IMPORTED_MODULE_1__.eventHandler.menuBtn_handler();\r\n    }\r\n});\n\n//# sourceURL=webpack://colorant/./src/js/home.js?");

/***/ }),

/***/ "./src/js/modules/UI.js":
/*!******************************!*\
  !*** ./src/js/modules/UI.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ui\": () => (/* binding */ ui)\n/* harmony export */ });\n/* harmony import */ var _tinyColor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tinyColor.js */ \"./src/js/modules/tinyColor.js\");\n/* harmony import */ var _ntc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ntc.js */ \"./src/js/modules/ntc.js\");\n/* harmony import */ var _hook_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hook.js */ \"./src/js/modules/hook.js\");\n\r\n\r\n\r\n\r\n_ntc_js__WEBPACK_IMPORTED_MODULE_1__.ntc.init();\r\n\r\nconst userInterface = (0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(\".ui\");\r\n\r\nclass UI {\r\n    constructor() {\r\n        this.darkColorMode = \"#101010\";\r\n        this.lightColorMode = \"#eeeeee\";\r\n        this.desktopDimensionX = 1360;\r\n        this.mobileDimensionX = 768;\r\n        this.currentDevice = getCurrentDevice();\r\n    }\r\n\r\n    updateColor(colorBar, hexColor) {\r\n        const isLight = (0,_tinyColor_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(hexColor).isLight();\r\n        const colorName = _ntc_js__WEBPACK_IMPORTED_MODULE_1__.ntc.name(hexColor)[1];\r\n\r\n        this.contrastUI(colorBar, isLight)\r\n        this.updateColorBar(colorBar, hexColor, colorName);\r\n    }\r\n\r\n    updateColorBar(colorBar, hexColor, colorName) {\r\n        const colorBg = (0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(\".color-bg\", false, colorBar);\r\n        colorBg.style.backgroundColor = hexColor;\r\n        (0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(\".color-code\", false, colorBar).innerHTML = hexColor.replace(\"#\", \"\");\r\n        (0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(\".color-name\", false, colorBar).innerHTML = colorName;\r\n    }\r\n\r\n    contrastUI(colorBar, isLight) {\r\n        const btn = (0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(`.btn`, true, colorBar);\r\n        const colorName = (0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(`.color-name`, false, colorBar);\r\n        const colorCode = (0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(`.color-code`, false, colorBar);\r\n    \r\n        if (isLight) {\r\n            btn.forEach(el => el.style.color = this.darkColorMode);\r\n            colorCode.style.color = this.darkColorMode;\r\n            colorName.style.color = this.darkColorMode;\r\n        } else {\r\n            btn.forEach(el => el.style.color = this.lightColorMode);\r\n            colorCode.style.color = this.lightColorMode;\r\n            colorName.style.color = this.lightColorMode;\r\n        }\r\n    }\r\n\r\n    showMessage(text, type, time = 3000) {\r\n        const newMessage = document.createElement(\"div\");\r\n        newMessage.className = `message message-${type}`;\r\n        \r\n        const ui = (0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(\".ui\");\r\n        const messageUI = (0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(\".messageUI\", false, ui);\r\n\r\n        newMessage.textContent = text;\r\n        \r\n        messageUI.innerHTML = \"\";\r\n        messageUI.appendChild(newMessage);\r\n\r\n        // final animation and remove this message\r\n        setTimeout(() => {\r\n            newMessage.classList.add(\"message-disappear\");\r\n            newMessage.addEventListener(\"animationend\", () => newMessage.remove());\r\n        }, time)\r\n    }\r\n\r\n    toggleOverlay() {\r\n        const overlay = (0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(\".overlay\");\r\n        overlay.classList.toggle(\"active\");\r\n    }\r\n\r\n    updateDimension(bars = null) {\r\n        const colorScheme = (0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(\".color-scheme\");\r\n        bars = bars || (0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(\".color-bar\", true, colorScheme);\r\n\r\n        // determine bar width by dividing color scheme width with bars length\r\n        const init = 100 / bars.length;\r\n\r\n        // set bar width\r\n        bars.forEach((bar, index) => {\r\n            let position = init * (index);\r\n\r\n            if(window.innerWidth > this.mobileDimensionX) {\r\n\r\n                bar.style.width = `${init}%`;\r\n                bar.style.height = `100%`;\r\n                bar.style.left = `${position}%`;\r\n                bar.style.top = `0`;\r\n            } else if(window.innerWidth <= this.mobileDimensionX) {\r\n                bar.style.width = `100%`;\r\n                bar.style.height = `${init}%`;\r\n                bar.style.left = `0`;\r\n                bar.style.top = `${position}%`;\r\n            }\r\n        })\r\n    }\r\n\r\n    // resizeHandler() {\r\n    //     const device = getCurrentDevice();\r\n        \r\n    //     if(device != this.currentDevice) {\r\n    //         return;\r\n    //     }\r\n\r\n    //     this.device = device;\r\n        \r\n\r\n    // }\r\n\r\n}\r\n\r\nfunction getCurrentDevice() {\r\n    const currentWidth = window.innerWidth;\r\n    return currentWidth <= 768 ? \"mobile\" : \"desktop\";\r\n}\r\n\r\nconst ui = new UI();\n\n//# sourceURL=webpack://colorant/./src/js/modules/UI.js?");

/***/ }),

/***/ "./src/js/modules/app.js":
/*!*******************************!*\
  !*** ./src/js/modules/app.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"user\": () => (/* binding */ user)\n/* harmony export */ });\n// USER\r\nclass User {\r\n    constructor() {\r\n        this.localStorage = window.localStorage;\r\n        this.nav = document.querySelector(\".nav\");\r\n        this.navMain = this.nav.querySelector(\".nav-main\");\r\n        this.signLinks = this.navMain.querySelector(\".sign\");\r\n        this.account = this.nav.querySelector(\".account\");\r\n    }\r\n\r\n    onLogin() {\r\n        // style when user already login \r\n        this.signLinks.style.display = \"none\";\r\n        this.account.style.display = \"flex\";\r\n\r\n        // handle UI\r\n        this.userLoginHandler();\r\n    }\r\n\r\n    onLogout() {\r\n        this.signLinks.style.display = \"flex\";\r\n        this.account.style.display = \"none\";\r\n    }\r\n\r\n    getUser() {\r\n        const user = this.localStorage.getItem(\"colorant_user\");\r\n        return user ? JSON.parse(user) : {};\r\n    }\r\n\r\n    isLogin() {\r\n        const user = this.localStorage.getItem(\"colorant_user\");\r\n        return user ? true : false;\r\n    }\r\n\r\n    userLoginHandler() {\r\n        const nav = document.querySelector(\".nav\");\r\n        const account = nav.querySelector(\".account\");\r\n        \r\n        const {username, avatar} = this.getUser();\r\n        const accountImgs = account.querySelectorAll(\".account-img-ctr\");\r\n\r\n        // set image profile\r\n        if(avatar) {\r\n            for(let x = 0; x < accountImgs.length; x++) {\r\n                const accountImg = accountImgs[x];\r\n                const userImage = document.createElement(\"div\");\r\n                const img = document.createElement(\"img\");\r\n                \r\n                userImage.classList.add(\"img-user\");\r\n                userImage.classList.add(\"avatar\");\r\n                img.setAttribute(\"src\", avatar);\r\n                img.style.display = \"block\";\r\n    \r\n                userImage.appendChild(img);\r\n                \r\n                accountImg.append(userImage);\r\n            }\r\n        } else {\r\n            for(let x = 0; x < accountImgs.length; x++) {\r\n                const accountImg = accountImgs[x];\r\n                const defaultImg = document.createElement(\"div\");\r\n                const defaultLetter = document.createElement(\"span\");\r\n    \r\n                // style default image\r\n                defaultImg.classList.add(\"img-default\");\r\n                defaultImg.classList.add(\"avatar\");\r\n                defaultImg.style.display = \"flex\";\r\n                defaultImg.style.backgroundColor = \"#157de6\";\r\n                \r\n                // style letter img\r\n                defaultLetter.innerText = username[0].toUpperCase();\r\n    \r\n                defaultImg.appendChild(defaultLetter);\r\n                accountImg.append(defaultImg);\r\n            }\r\n        }\r\n\r\n        // set username\r\n        const accountNameDOM = document.querySelectorAll(\".account-name\");\r\n        for(let x = 0; x < accountNameDOM.length; x++) {\r\n            accountNameDOM[x].innerText = username;\r\n        }\r\n    }\r\n}\r\n\r\nconst user = new User()\n\n//# sourceURL=webpack://colorant/./src/js/modules/app.js?");

/***/ }),

/***/ "./src/js/modules/eventHandler.js":
/*!****************************************!*\
  !*** ./src/js/modules/eventHandler.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"eventHandler\": () => (/* binding */ eventHandler)\n/* harmony export */ });\n/* harmony import */ var _generator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./generator.js */ \"./src/js/modules/generator.js\");\n/* harmony import */ var _UI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./UI.js */ \"./src/js/modules/UI.js\");\n/* harmony import */ var _hook_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hook.js */ \"./src/js/modules/hook.js\");\n\r\n\r\n\r\n\r\nconst COLOR_FIELD = (0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(\".color-field\");\r\nconst COLOR_SCHEME = (0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(\".color-scheme\", false, COLOR_FIELD);\r\nconst UI = (0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(\".ui\");\r\n\r\nclass events {\r\n    constructor() {\r\n        this.desktopDimensionX = 1360;\r\n        this.mobileDimensionX = 768;\r\n        this.dragEvent = {\r\n            posInit: 0,\r\n            currentMousePos: 0,\r\n            beforeMousePos: 0,\r\n            mouseDirection: null,\r\n            flagPos: null,\r\n            collisionList: [],\r\n            collisionIndex: null,\r\n            collider: null,\r\n            elements: [],\r\n        }\r\n    }\r\n\r\n    menuBtn_handler() {\r\n        const navBar = (0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(\".nav-main\");\r\n        const closeBtn = (0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(\".btn-close-nav\");\r\n        const menuBtn = (0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(\".btn-menu-mobile\");\r\n\r\n        navBar.classList.toggle(\"show\");\r\n        closeBtn.classList.toggle(\"active\");\r\n        menuBtn.classList.toggle(\"invisible\");\r\n    }\r\n\r\n    saveBtn_handler(saveBtn, colorList) {\r\n        if(saveBtn.classList.contains(\"saved\")) {\r\n            saveBtn.classList.remove(\"saved\");\r\n            return;\r\n        } else {\r\n            saveBtn.classList.add(\"saved\");\r\n            _UI_js__WEBPACK_IMPORTED_MODULE_1__.ui.showMessage(`${colorList} has been saved in the account database`, \"success\");\r\n        }\r\n    }\r\n\r\n    bookmarkBtn_handler() {\r\n        const bookmarkUI = (0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(\".bookmark\", false, UI);\r\n        bookmarkUI.classList.toggle(\"show\");\r\n    }\r\n\r\n    addBtn_handler(len) {\r\n        const hex = `#${(0,_generator_js__WEBPACK_IMPORTED_MODULE_0__.randomHex)()}`;\r\n        const bar = document.createElement(\"div\");\r\n\r\n        bar.className = \"color-bar add-anim\";\r\n        bar.innerHTML = `<div class=\"color-bg\"></div>\r\n        <div class=\"color-body\">\r\n            <div class=\"color-tools\">\r\n                <div class=\"btn btn-md btn-color btn-remove\" role=\"button\" data-tippy-content=\"remove color\">\r\n                    <i class=\"ri-delete-bin-7-line\"></i>\r\n                </div>\r\n                <div class=\"btn btn-md btn-color btn-drag\" role=\"button\" data-tippy-content=\"move color\" draggable=\"true\">\r\n                    <i class=\"ri-drag-move-line\"></i>\r\n                </div>\r\n                <div class=\"btn btn-md btn-color btn-copy\" role=\"button\" data-tippy-content=\"copy color code\">\r\n                    <i class=\"ri-clipboard-line\"></i>\r\n                </div>\r\n                <div class=\"btn btn-md btn-color btn-lock\" role=\"button\" data-tippy-content=\"lock color\">\r\n                    <i class=\"ri-lock-unlock-line\"></i>\r\n                </div>\r\n            </div>\r\n            <div class=\"color-info\">\r\n                <div class=\"color-code\">31F9A1</div>\r\n                <div class=\"color-name\">Crimson</div>\r\n            </div>`\r\n\r\n        if(len === 2) {\r\n            (0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(\".btn-remove\", true, COLOR_SCHEME).forEach(btn => btn.style.display = \"block\");\r\n        }\r\n\r\n        COLOR_SCHEME.appendChild(bar);\r\n        _UI_js__WEBPACK_IMPORTED_MODULE_1__.ui.updateColor(bar, hex);\r\n\r\n        bar.addEventListener(\"animationend\", event => {\r\n            bar.classList.remove(\"add-anim\");\r\n        })\r\n\r\n    }\r\n\r\n    // copy btn\r\n    copyBtn_handler(bar) {\r\n        const code = (0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(\".color-code\", false, bar).innerText;\r\n        return window.navigator.clipboard.writeText(code);\r\n        \r\n    }\r\n\r\n    // lock btn\r\n    lockBtn_handler(bar, isLock) {\r\n        let icon;\r\n        isLock = isLock === \"true\" ? true : false;\r\n        const lockBtn = (0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(\".btn-lock\", false, bar);\r\n\r\n        if(isLock) {\r\n            icon = `<i class=\"ri-lock-unlock-line\"></i>`;\r\n            lockBtn.classList.remove(\"lock\");\r\n        } else {\r\n            icon = `<i class=\"ri-lock-line\"></i>`;\r\n            lockBtn.classList.add(\"lock\");\r\n        }\r\n\r\n        bar.setAttribute(\"data-isLock\", `${!isLock}`);\r\n        lockBtn.innerHTML = icon;\r\n        return;\r\n    }\r\n\r\n    // remove btn\r\n    removeBtn_handler(bar, len) {\r\n        if(len >= 3) {\r\n            bar.remove();\r\n        }\r\n        if(len <= 3) {\r\n            (0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(\".btn-remove\", true, COLOR_SCHEME).forEach(btn => btn.style.display = \"none\");\r\n        }\r\n    }\r\n\r\n    dragStart_handler(bar, target) {\r\n        const tools = (0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(\".color-tools\", false, bar);\r\n        const btns = (0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(\".btn:not(.btn-drag)\", true, tools);\r\n\r\n        // style bar \r\n        bar.style.zIndex = \"99\";\r\n        bar.classList.add(\"dragged\", \"transition-none\");\r\n\r\n        // style btn \r\n        target.style.transform = \"scale(1.1)\";\r\n        btns.forEach(btn => btn.classList.add(\"invisible\"));\r\n\r\n        // set collision pos\r\n        (0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(\".color-bar\", true, COLOR_SCHEME).forEach((bar, index) => {\r\n            let collisionPos = Math.round(bar.getBoundingClientRect().width * (index + 1));\r\n            this.dragEvent.collisionList.push(collisionPos);\r\n        });\r\n\r\n    }\r\n\r\n    dragEnd_handler(bar, target) {\r\n        const tools = (0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(\".color-tools\", false, bar);\r\n        const btns = (0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(\".btn:not(.btn-drag)\", true, tools);\r\n        let {posInit, currentMousePos, beforeMousePos, mouseDirection,  flagPos,  collisionList, collisionIndex, collider, elements} = this.dragEvent;\r\n        let homePos = (100 / elements.length);\r\n\r\n        // style bar\r\n        bar.style.zIndex = \"0\";\r\n\r\n        bar.classList.remove(\"dragged\", \"transition-none\");\r\n        bar.style.transform = `translateX(0)`;\r\n\r\n        \r\n        // style btn \r\n        target.style.transform = \"scale(1)\";\r\n        btns.forEach(btn => btn.classList.remove(\"invisible\"));\r\n        \r\n        // remove transition for while for every non dragged element to prevent bug transition\r\n        elements.forEach(el => {\r\n            el.classList.add(\"transition-none\");\r\n            el.style.transform = `translateX(0)`;\r\n        });\r\n\r\n        // determine new position\r\n        if(mouseDirection === \"right\") {\r\n            let newPos, barPos, isToRight = true;\r\n\r\n            elements.forEach((el, index) => {\r\n\r\n                // MOUSE DIRECTION STARTED FROM RIGHT\r\n                if(index <= collisionIndex && index > collider) {\r\n                    newPos = homePos * (index - 1);\r\n\r\n                    el.style.left = `${newPos}%`;\r\n\r\n                // MOUSE DIRECTION FROM LEFT DIRECTION THEN TO RIGHT\r\n                } else if(index >= collisionIndex && index < collider) {\r\n                    newPos = homePos * (index + 1);\r\n                    isToRight = false;\r\n\r\n                    el.style.left = `${newPos}%`;\r\n\r\n                }\r\n\r\n                // set dragged bar position\r\n                barPos = homePos * collisionIndex;\r\n                bar.style.left = `${barPos}%`;\r\n\r\n            });\r\n\r\n            if(isToRight) {\r\n                COLOR_SCHEME.insertBefore(bar, elements[collisionIndex].nextElementSibling);\r\n            } else {\r\n                COLOR_SCHEME.insertBefore(bar, elements[collisionIndex]);\r\n            }\r\n            \r\n        } else {\r\n            let newPos, barPos, isToLeft = true;\r\n\r\n            elements.forEach((el, index) => {\r\n                \r\n                // MOUSE DIRECTION STARTED FROM LEFT\r\n                if(index >= collisionIndex && index < collider) {\r\n                    newPos = homePos * (index + 1);\r\n                    el.style.left = `${newPos}%`;\r\n\r\n                // MOUSE DIRECTION FROM RIGHT DIRECTION THEN TO LEFT\r\n                } else if(index <= collisionIndex && index > collider) {\r\n                    isToLeft = false;\r\n                    newPos = homePos * (index - 1);\r\n                    el.style.left = `${newPos}%`;\r\n                }\r\n\r\n            });\r\n\r\n            barPos = homePos * collisionIndex;\r\n            bar.style.left = `${barPos}%`;\r\n\r\n            if(isToLeft) {\r\n                COLOR_SCHEME.insertBefore(bar, elements[collisionIndex]);\r\n            } else {\r\n                COLOR_SCHEME.insertBefore(bar, elements[collisionIndex].nextElementSibling);\r\n            }\r\n\r\n        }\r\n        \r\n        // set defalut every element bar\r\n        elements.forEach(el => {\r\n            el.classList.remove(\"transition-none\");\r\n        })\r\n\r\n        // set drag event to default\r\n        this.dragEvent = {\r\n            posInit: 0,\r\n            currentMousePos: 0,\r\n            beforeMousePos: 0,\r\n            mouseDirection: null,\r\n            flagPos: null,\r\n            collisionList: [],\r\n            collisionIndex: null,\r\n            collider: null,\r\n            elements: [],\r\n        }\r\n    }\r\n\r\n    dragMove_handler(event, dragBar) {\r\n        const colorSchemeDimension = Math.floor(COLOR_SCHEME.getBoundingClientRect().width);\r\n        const barDimension = Math.floor(dragBar.getBoundingClientRect().width);\r\n        const posX = event.clientX;\r\n        \r\n        let {posInit, currentMousePos, beforeMousePos, mouseDirection,  flagPos,  collisionList, collisionIndex, collider, elements} = this.dragEvent;\r\n        posInit = posInit || posX;\r\n        elements = [...(0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(\".color-bar\", true, COLOR_SCHEME)];\r\n        collider = collider || elements.indexOf(dragBar);\r\n        \r\n        let moveX = posInit === posX ? 1 : posX - posInit;\r\n        let bars = [...(0,_hook_js__WEBPACK_IMPORTED_MODULE_2__.hook)(\".color-bar\", true, COLOR_SCHEME)];\r\n        currentMousePos = event.clientX;\r\n\r\n        // DETERMINE MOUSE DIRECTION\r\n        if(currentMousePos != beforeMousePos) {\r\n            mouseDirection = currentMousePos - beforeMousePos > 0 ? \"right\" : \"left\";\r\n        }\r\n\r\n\r\n        // SET BAR POSITION WHILE MOVE\r\n        dragBar.style.transform = `translateX(${moveX}px)`;\r\n\r\n        // COLLISION HANDLER\r\n        collisionList.forEach((collision, index) => {\r\n            if(index === 0) {\r\n                if(posX > 0 && posX < collision) {\r\n                    return collisionIndex = index;\r\n                }\r\n            } else if(index === collisionList.length - 1) {\r\n                if(posX > collisionList[index - 1] && posX < collision) {\r\n                    return collisionIndex = index;\r\n                }\r\n            } else {\r\n                if(posX > collisionList[index - 1] && posX < collision) return collisionIndex = index;\r\n            }\r\n        });\r\n\r\n        if(collisionIndex != null) {\r\n\r\n            // WHEN BAR SELECT IS ON END INDEX \r\n            if(collider >= collisionIndex) {\r\n                if(mouseDirection === \"left\") {\r\n                    elements.forEach((el, index) => {\r\n                        if(index >= collisionIndex && index < collider && el != dragBar) {\r\n                            el.style.transform = `translateX(${barDimension}px)`;\r\n                        } \r\n                    })\r\n                } else if(mouseDirection === \"right\") {\r\n                    elements.forEach((el, index) => {\r\n                        if(index + 1 <= collisionIndex) {\r\n                            el.style.transform = `translateX(0px)`;\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n\r\n            // WHEN BAR SELECT IS ON FIRST INDEX\r\n            if(collider <= collisionIndex) {\r\n                if(mouseDirection === \"right\") {\r\n                    elements.forEach((el, index) => {\r\n                        if(index >= collisionIndex && index < collisionIndex + 1 && el != dragBar) {\r\n                            el.style.transform = `translateX(-${barDimension}px)`;\r\n                        }\r\n                    });\r\n                } else {\r\n                    elements.forEach((el, index) => {\r\n                        if(index - 1 >= collisionIndex) {\r\n                            el.style.transform = `translateX(0px)`;\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        this.dragEvent = {\r\n            posInit,\r\n            currentMousePos,\r\n            beforeMousePos: currentMousePos,\r\n            mouseDirection,\r\n            flagPos,\r\n            collisionList,\r\n            collisionIndex,\r\n            collider,\r\n            elements\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst eventHandler = new events()\r\n\n\n//# sourceURL=webpack://colorant/./src/js/modules/eventHandler.js?");

/***/ }),

/***/ "./src/js/modules/generator.js":
/*!*************************************!*\
  !*** ./src/js/modules/generator.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"generator\": () => (/* binding */ generator),\n/* harmony export */   \"randomHex\": () => (/* binding */ randomHex)\n/* harmony export */ });\n/* harmony import */ var _hook_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hook.js */ \"./src/js/modules/hook.js\");\n/* harmony import */ var _UI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./UI.js */ \"./src/js/modules/UI.js\");\n\r\n\r\n\r\nfunction generator() {\r\n    const COLOR_BAR = (0,_hook_js__WEBPACK_IMPORTED_MODULE_0__.hook)(\".color-bar\", true);\r\n\r\n    COLOR_BAR.forEach(bar => {\r\n        let isLock = bar.getAttribute(\"data-isLock\");\r\n        isLock = isLock === \"true\" ? true : false;\r\n\r\n        if (!isLock) {\r\n            const hexColor = `#${randomHex()}`;\r\n            _UI_js__WEBPACK_IMPORTED_MODULE_1__.ui.updateColor(bar, hexColor);\r\n        }\r\n    });\r\n}\r\n\r\n// RANDOMIZE METHOD BY GENERATE RANDOM HEX CODE\r\nfunction randomHex() {\r\n    const randomize = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\r\n    const res = [];\r\n    for (let x = 0; x < 6; x++) {\r\n        res.push(randomize[Math.floor(Math.random() * randomize.length)]);\r\n    }\r\n\r\n    return res.join(\"\");\r\n}\r\n\n\n//# sourceURL=webpack://colorant/./src/js/modules/generator.js?");

/***/ }),

/***/ "./src/js/modules/hook.js":
/*!********************************!*\
  !*** ./src/js/modules/hook.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"hook\": () => (/* binding */ hook)\n/* harmony export */ });\nfunction hook(className, isMulti = false, cascadeSearch = \"\") {\r\n    if (isMulti) {\r\n        return cascadeSearch ? cascadeSearch.querySelectorAll(`${className}`) : document.querySelectorAll(`${className}`);\r\n    } else {\r\n        return cascadeSearch ? cascadeSearch.querySelector(`${className}`) : document.querySelector(`${className}`);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://colorant/./src/js/modules/hook.js?");

/***/ }),

/***/ "./src/js/modules/ntc.js":
/*!*******************************!*\
  !*** ./src/js/modules/ntc.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ntc\": () => (/* binding */ ntc)\n/* harmony export */ });\n    // let n_match  = ntc.name(\"#6195ED\");\r\n    // n_rgb        = n_match[0]; // This is the RGB value of the closest matching color\r\n    // n_name       = n_match[1]; // This is the text string for the name of the match\r\n    // n_exactmatch = n_match[2]; // True if exact color match, False if close-match\r\n\r\n    // alert(n_match);\r\n\r\nconst ntc = {\r\n\r\n    init: function() {\r\n      let color, rgb, hsl;\r\n      for(let i = 0; i < ntc.names.length; i++)\r\n      {\r\n        color = \"#\" + ntc.names[i][0];\r\n        rgb = ntc.rgb(color);\r\n        hsl = ntc.hsl(color);\r\n        ntc.names[i].push(rgb[0], rgb[1], rgb[2], hsl[0], hsl[1], hsl[2]);\r\n      }\r\n    },\r\n  \r\n    name: function(color) {\r\n  \r\n      color = color.toUpperCase();\r\n      if(color.length < 3 || color.length > 7)\r\n        return [\"#000000\", \"Invalid Color: \" + color, false];\r\n      if(color.length % 3 == 0)\r\n        color = \"#\" + color;\r\n      if(color.length == 4)\r\n        color = \"#\" + color.substr(1, 1) + color.substr(1, 1) + color.substr(2, 1) + color.substr(2, 1) + color.substr(3, 1) + color.substr(3, 1);\r\n  \r\n      let rgb = ntc.rgb(color);\r\n      let r = rgb[0], g = rgb[1], b = rgb[2];\r\n      let hsl = ntc.hsl(color);\r\n      let h = hsl[0], s = hsl[1], l = hsl[2];\r\n      let ndf1 = 0, ndf2 = 0, ndf = 0;\r\n      let cl = -1, df = -1;\r\n  \r\n      for(let i = 0; i < ntc.names.length; i++)\r\n      {\r\n        if(color == \"#\" + ntc.names[i][0])\r\n          return [\"#\" + ntc.names[i][0], ntc.names[i][1], true];\r\n  \r\n        ndf1 = Math.pow(r - ntc.names[i][2], 2) + Math.pow(g - ntc.names[i][3], 2) + Math.pow(b - ntc.names[i][4], 2);\r\n        ndf2 = Math.pow(h - ntc.names[i][5], 2) + Math.pow(s - ntc.names[i][6], 2) + Math.pow(l - ntc.names[i][7], 2);\r\n        ndf = ndf1 + ndf2 * 2;\r\n        if(df < 0 || df > ndf)\r\n        {\r\n          df = ndf;\r\n          cl = i;\r\n        }\r\n      }\r\n  \r\n      return (cl < 0 ? [\"#000000\", \"Invalid Color: \" + color, false] : [\"#\" + ntc.names[cl][0], ntc.names[cl][1], false]);\r\n    },\r\n  \r\n    // adopted from: Farbtastic 1.2\r\n    // http://acko.net/dev/farbtastic\r\n    hsl: function (color) {\r\n  \r\n      let rgb = [parseInt('0x' + color.substring(1, 3)) / 255, parseInt('0x' + color.substring(3, 5)) / 255, parseInt('0x' + color.substring(5, 7)) / 255];\r\n      let min, max, delta, h, s, l;\r\n      let r = rgb[0], g = rgb[1], b = rgb[2];\r\n  \r\n      min = Math.min(r, Math.min(g, b));\r\n      max = Math.max(r, Math.max(g, b));\r\n      delta = max - min;\r\n      l = (min + max) / 2;\r\n  \r\n      s = 0;\r\n      if(l > 0 && l < 1)\r\n        s = delta / (l < 0.5 ? (2 * l) : (2 - 2 * l));\r\n  \r\n      h = 0;\r\n      if(delta > 0)\r\n      {\r\n        if (max == r && max != g) h += (g - b) / delta;\r\n        if (max == g && max != b) h += (2 + (b - r) / delta);\r\n        if (max == b && max != r) h += (4 + (r - g) / delta);\r\n        h /= 6;\r\n      }\r\n      return [parseInt(h * 255), parseInt(s * 255), parseInt(l * 255)];\r\n    },\r\n  \r\n    // adopted from: Farbtastic 1.2\r\n    // http://acko.net/dev/farbtastic\r\n    rgb: function(color) {\r\n      return [parseInt('0x' + color.substring(1, 3)), parseInt('0x' + color.substring(3, 5)),  parseInt('0x' + color.substring(5, 7))];\r\n    },\r\n  \r\n    names: [\r\n  [\"000000\", \"Black\"],\r\n  [\"000080\", \"Navy Blue\"],\r\n  [\"0000C8\", \"Dark Blue\"],\r\n  [\"0000FF\", \"Blue\"],\r\n  [\"000741\", \"Stratos\"],\r\n  [\"001B1C\", \"Swamp\"],\r\n  [\"002387\", \"Resolution Blue\"],\r\n  [\"002900\", \"Deep Fir\"],\r\n  [\"002E20\", \"Burnham\"],\r\n  [\"002FA7\", \"International Klein Blue\"],\r\n  [\"003153\", \"Prussian Blue\"],\r\n  [\"003366\", \"Midnight Blue\"],\r\n  [\"003399\", \"Smalt\"],\r\n  [\"003532\", \"Deep Teal\"],\r\n  [\"003E40\", \"Cyprus\"],\r\n  [\"004620\", \"Kaitoke Green\"],\r\n  [\"0047AB\", \"Cobalt\"],\r\n  [\"004816\", \"Crusoe\"],\r\n  [\"004950\", \"Sherpa Blue\"],\r\n  [\"0056A7\", \"Endeavour\"],\r\n  [\"00581A\", \"Camarone\"],\r\n  [\"0066CC\", \"Science Blue\"],\r\n  [\"0066FF\", \"Blue Ribbon\"],\r\n  [\"00755E\", \"Tropical Rain Forest\"],\r\n  [\"0076A3\", \"Allports\"],\r\n  [\"007BA7\", \"Deep Cerulean\"],\r\n  [\"007EC7\", \"Lochmara\"],\r\n  [\"007FFF\", \"Azure Radiance\"],\r\n  [\"008080\", \"Teal\"],\r\n  [\"0095B6\", \"Bondi Blue\"],\r\n  [\"009DC4\", \"Pacific Blue\"],\r\n  [\"00A693\", \"Persian Green\"],\r\n  [\"00A86B\", \"Jade\"],\r\n  [\"00CC99\", \"Caribbean Green\"],\r\n  [\"00CCCC\", \"Robin's Egg Blue\"],\r\n  [\"00FF00\", \"Green\"],\r\n  [\"00FF7F\", \"Spring Green\"],\r\n  [\"00FFFF\", \"Cyan / Aqua\"],\r\n  [\"010D1A\", \"Blue Charcoal\"],\r\n  [\"011635\", \"Midnight\"],\r\n  [\"011D13\", \"Holly\"],\r\n  [\"012731\", \"Daintree\"],\r\n  [\"01361C\", \"Cardin Green\"],\r\n  [\"01371A\", \"County Green\"],\r\n  [\"013E62\", \"Astronaut Blue\"],\r\n  [\"013F6A\", \"Regal Blue\"],\r\n  [\"014B43\", \"Aqua Deep\"],\r\n  [\"015E85\", \"Orient\"],\r\n  [\"016162\", \"Blue Stone\"],\r\n  [\"016D39\", \"Fun Green\"],\r\n  [\"01796F\", \"Pine Green\"],\r\n  [\"017987\", \"Blue Lagoon\"],\r\n  [\"01826B\", \"Deep Sea\"],\r\n  [\"01A368\", \"Green Haze\"],\r\n  [\"022D15\", \"English Holly\"],\r\n  [\"02402C\", \"Sherwood Green\"],\r\n  [\"02478E\", \"Congress Blue\"],\r\n  [\"024E46\", \"Evening Sea\"],\r\n  [\"026395\", \"Bahama Blue\"],\r\n  [\"02866F\", \"Observatory\"],\r\n  [\"02A4D3\", \"Cerulean\"],\r\n  [\"03163C\", \"Tangaroa\"],\r\n  [\"032B52\", \"Green Vogue\"],\r\n  [\"036A6E\", \"Mosque\"],\r\n  [\"041004\", \"Midnight Moss\"],\r\n  [\"041322\", \"Black Pearl\"],\r\n  [\"042E4C\", \"Blue Whale\"],\r\n  [\"044022\", \"Zuccini\"],\r\n  [\"044259\", \"Teal Blue\"],\r\n  [\"051040\", \"Deep Cove\"],\r\n  [\"051657\", \"Gulf Blue\"],\r\n  [\"055989\", \"Venice Blue\"],\r\n  [\"056F57\", \"Watercourse\"],\r\n  [\"062A78\", \"Catalina Blue\"],\r\n  [\"063537\", \"Tiber\"],\r\n  [\"069B81\", \"Gossamer\"],\r\n  [\"06A189\", \"Niagara\"],\r\n  [\"073A50\", \"Tarawera\"],\r\n  [\"080110\", \"Jaguar\"],\r\n  [\"081910\", \"Black Bean\"],\r\n  [\"082567\", \"Deep Sapphire\"],\r\n  [\"088370\", \"Elf Green\"],\r\n  [\"08E8DE\", \"Bright Turquoise\"],\r\n  [\"092256\", \"Downriver\"],\r\n  [\"09230F\", \"Palm Green\"],\r\n  [\"09255D\", \"Madison\"],\r\n  [\"093624\", \"Bottle Green\"],\r\n  [\"095859\", \"Deep Sea Green\"],\r\n  [\"097F4B\", \"Salem\"],\r\n  [\"0A001C\", \"Black Russian\"],\r\n  [\"0A480D\", \"Dark Fern\"],\r\n  [\"0A6906\", \"Japanese Laurel\"],\r\n  [\"0A6F75\", \"Atoll\"],\r\n  [\"0B0B0B\", \"Cod Gray\"],\r\n  [\"0B0F08\", \"Marshland\"],\r\n  [\"0B1107\", \"Gordons Green\"],\r\n  [\"0B1304\", \"Black Forest\"],\r\n  [\"0B6207\", \"San Felix\"],\r\n  [\"0BDA51\", \"Malachite\"],\r\n  [\"0C0B1D\", \"Ebony\"],\r\n  [\"0C0D0F\", \"Woodsmoke\"],\r\n  [\"0C1911\", \"Racing Green\"],\r\n  [\"0C7A79\", \"Surfie Green\"],\r\n  [\"0C8990\", \"Blue Chill\"],\r\n  [\"0D0332\", \"Black Rock\"],\r\n  [\"0D1117\", \"Bunker\"],\r\n  [\"0D1C19\", \"Aztec\"],\r\n  [\"0D2E1C\", \"Bush\"],\r\n  [\"0E0E18\", \"Cinder\"],\r\n  [\"0E2A30\", \"Firefly\"],\r\n  [\"0F2D9E\", \"Torea Bay\"],\r\n  [\"10121D\", \"Vulcan\"],\r\n  [\"101405\", \"Green Waterloo\"],\r\n  [\"105852\", \"Eden\"],\r\n  [\"110C6C\", \"Arapawa\"],\r\n  [\"120A8F\", \"Ultramarine\"],\r\n  [\"123447\", \"Elephant\"],\r\n  [\"126B40\", \"Jewel\"],\r\n  [\"130000\", \"Diesel\"],\r\n  [\"130A06\", \"Asphalt\"],\r\n  [\"13264D\", \"Blue Zodiac\"],\r\n  [\"134F19\", \"Parsley\"],\r\n  [\"140600\", \"Nero\"],\r\n  [\"1450AA\", \"Tory Blue\"],\r\n  [\"151F4C\", \"Bunting\"],\r\n  [\"1560BD\", \"Denim\"],\r\n  [\"15736B\", \"Genoa\"],\r\n  [\"161928\", \"Mirage\"],\r\n  [\"161D10\", \"Hunter Green\"],\r\n  [\"162A40\", \"Big Stone\"],\r\n  [\"163222\", \"Celtic\"],\r\n  [\"16322C\", \"Timber Green\"],\r\n  [\"163531\", \"Gable Green\"],\r\n  [\"171F04\", \"Pine Tree\"],\r\n  [\"175579\", \"Chathams Blue\"],\r\n  [\"182D09\", \"Deep Forest Green\"],\r\n  [\"18587A\", \"Blumine\"],\r\n  [\"19330E\", \"Palm Leaf\"],\r\n  [\"193751\", \"Nile Blue\"],\r\n  [\"1959A8\", \"Fun Blue\"],\r\n  [\"1A1A68\", \"Lucky Point\"],\r\n  [\"1AB385\", \"Mountain Meadow\"],\r\n  [\"1B0245\", \"Tolopea\"],\r\n  [\"1B1035\", \"Haiti\"],\r\n  [\"1B127B\", \"Deep Koamaru\"],\r\n  [\"1B1404\", \"Acadia\"],\r\n  [\"1B2F11\", \"Seaweed\"],\r\n  [\"1B3162\", \"Biscay\"],\r\n  [\"1B659D\", \"Matisse\"],\r\n  [\"1C1208\", \"Crowshead\"],\r\n  [\"1C1E13\", \"Rangoon Green\"],\r\n  [\"1C39BB\", \"Persian Blue\"],\r\n  [\"1C402E\", \"Everglade\"],\r\n  [\"1C7C7D\", \"Elm\"],\r\n  [\"1D6142\", \"Green Pea\"],\r\n  [\"1E0F04\", \"Creole\"],\r\n  [\"1E1609\", \"Karaka\"],\r\n  [\"1E1708\", \"El Paso\"],\r\n  [\"1E385B\", \"Cello\"],\r\n  [\"1E433C\", \"Te Papa Green\"],\r\n  [\"1E90FF\", \"Dodger Blue\"],\r\n  [\"1E9AB0\", \"Eastern Blue\"],\r\n  [\"1F120F\", \"Night Rider\"],\r\n  [\"1FC2C2\", \"Java\"],\r\n  [\"20208D\", \"Jacksons Purple\"],\r\n  [\"202E54\", \"Cloud Burst\"],\r\n  [\"204852\", \"Blue Dianne\"],\r\n  [\"211A0E\", \"Eternity\"],\r\n  [\"220878\", \"Deep Blue\"],\r\n  [\"228B22\", \"Forest Green\"],\r\n  [\"233418\", \"Mallard\"],\r\n  [\"240A40\", \"Violet\"],\r\n  [\"240C02\", \"Kilamanjaro\"],\r\n  [\"242A1D\", \"Log Cabin\"],\r\n  [\"242E16\", \"Black Olive\"],\r\n  [\"24500F\", \"Green House\"],\r\n  [\"251607\", \"Graphite\"],\r\n  [\"251706\", \"Cannon Black\"],\r\n  [\"251F4F\", \"Port Gore\"],\r\n  [\"25272C\", \"Shark\"],\r\n  [\"25311C\", \"Green Kelp\"],\r\n  [\"2596D1\", \"Curious Blue\"],\r\n  [\"260368\", \"Paua\"],\r\n  [\"26056A\", \"Paris M\"],\r\n  [\"261105\", \"Wood Bark\"],\r\n  [\"261414\", \"Gondola\"],\r\n  [\"262335\", \"Steel Gray\"],\r\n  [\"26283B\", \"Ebony Clay\"],\r\n  [\"273A81\", \"Bay of Many\"],\r\n  [\"27504B\", \"Plantation\"],\r\n  [\"278A5B\", \"Eucalyptus\"],\r\n  [\"281E15\", \"Oil\"],\r\n  [\"283A77\", \"Astronaut\"],\r\n  [\"286ACD\", \"Mariner\"],\r\n  [\"290C5E\", \"Violent Violet\"],\r\n  [\"292130\", \"Bastille\"],\r\n  [\"292319\", \"Zeus\"],\r\n  [\"292937\", \"Charade\"],\r\n  [\"297B9A\", \"Jelly Bean\"],\r\n  [\"29AB87\", \"Jungle Green\"],\r\n  [\"2A0359\", \"Cherry Pie\"],\r\n  [\"2A140E\", \"Coffee Bean\"],\r\n  [\"2A2630\", \"Baltic Sea\"],\r\n  [\"2A380B\", \"Turtle Green\"],\r\n  [\"2A52BE\", \"Cerulean Blue\"],\r\n  [\"2B0202\", \"Sepia Black\"],\r\n  [\"2B194F\", \"Valhalla\"],\r\n  [\"2B3228\", \"Heavy Metal\"],\r\n  [\"2C0E8C\", \"Blue Gem\"],\r\n  [\"2C1632\", \"Revolver\"],\r\n  [\"2C2133\", \"Bleached Cedar\"],\r\n  [\"2C8C84\", \"Lochinlet\"],\r\n  [\"2D2510\", \"Mikado\"],\r\n  [\"2D383A\", \"Outer Space\"],\r\n  [\"2D569B\", \"St Tropaz\"],\r\n  [\"2E0329\", \"Jacaranda\"],\r\n  [\"2E1905\", \"Jacko Bean\"],\r\n  [\"2E3222\", \"Rangitoto\"],\r\n  [\"2E3F62\", \"Rhino\"],\r\n  [\"2E8B57\", \"Sea Green\"],\r\n  [\"2EBFD4\", \"Scooter\"],\r\n  [\"2F270E\", \"Onion\"],\r\n  [\"2F3CB3\", \"Governor Bay\"],\r\n  [\"2F519E\", \"Sapphire\"],\r\n  [\"2F5A57\", \"Spectra\"],\r\n  [\"2F6168\", \"Casal\"],\r\n  [\"300529\", \"Melanzane\"],\r\n  [\"301F1E\", \"Cocoa Brown\"],\r\n  [\"302A0F\", \"Woodrush\"],\r\n  [\"304B6A\", \"San Juan\"],\r\n  [\"30D5C8\", \"Turquoise\"],\r\n  [\"311C17\", \"Eclipse\"],\r\n  [\"314459\", \"Pickled Bluewood\"],\r\n  [\"315BA1\", \"Azure\"],\r\n  [\"31728D\", \"Calypso\"],\r\n  [\"317D82\", \"Paradiso\"],\r\n  [\"32127A\", \"Persian Indigo\"],\r\n  [\"32293A\", \"Blackcurrant\"],\r\n  [\"323232\", \"Mine Shaft\"],\r\n  [\"325D52\", \"Stromboli\"],\r\n  [\"327C14\", \"Bilbao\"],\r\n  [\"327DA0\", \"Astral\"],\r\n  [\"33036B\", \"Christalle\"],\r\n  [\"33292F\", \"Thunder\"],\r\n  [\"33CC99\", \"Shamrock\"],\r\n  [\"341515\", \"Tamarind\"],\r\n  [\"350036\", \"Mardi Gras\"],\r\n  [\"350E42\", \"Valentino\"],\r\n  [\"350E57\", \"Jagger\"],\r\n  [\"353542\", \"Tuna\"],\r\n  [\"354E8C\", \"Chambray\"],\r\n  [\"363050\", \"Martinique\"],\r\n  [\"363534\", \"Tuatara\"],\r\n  [\"363C0D\", \"Waiouru\"],\r\n  [\"36747D\", \"Ming\"],\r\n  [\"368716\", \"La Palma\"],\r\n  [\"370202\", \"Chocolate\"],\r\n  [\"371D09\", \"Clinker\"],\r\n  [\"37290E\", \"Brown Tumbleweed\"],\r\n  [\"373021\", \"Birch\"],\r\n  [\"377475\", \"Oracle\"],\r\n  [\"380474\", \"Blue Diamond\"],\r\n  [\"381A51\", \"Grape\"],\r\n  [\"383533\", \"Dune\"],\r\n  [\"384555\", \"Oxford Blue\"],\r\n  [\"384910\", \"Clover\"],\r\n  [\"394851\", \"Limed Spruce\"],\r\n  [\"396413\", \"Dell\"],\r\n  [\"3A0020\", \"Toledo\"],\r\n  [\"3A2010\", \"Sambuca\"],\r\n  [\"3A2A6A\", \"Jacarta\"],\r\n  [\"3A686C\", \"William\"],\r\n  [\"3A6A47\", \"Killarney\"],\r\n  [\"3AB09E\", \"Keppel\"],\r\n  [\"3B000B\", \"Temptress\"],\r\n  [\"3B0910\", \"Aubergine\"],\r\n  [\"3B1F1F\", \"Jon\"],\r\n  [\"3B2820\", \"Treehouse\"],\r\n  [\"3B7A57\", \"Amazon\"],\r\n  [\"3B91B4\", \"Boston Blue\"],\r\n  [\"3C0878\", \"Windsor\"],\r\n  [\"3C1206\", \"Rebel\"],\r\n  [\"3C1F76\", \"Meteorite\"],\r\n  [\"3C2005\", \"Dark Ebony\"],\r\n  [\"3C3910\", \"Camouflage\"],\r\n  [\"3C4151\", \"Bright Gray\"],\r\n  [\"3C4443\", \"Cape Cod\"],\r\n  [\"3C493A\", \"Lunar Green\"],\r\n  [\"3D0C02\", \"Bean  \"],\r\n  [\"3D2B1F\", \"Bistre\"],\r\n  [\"3D7D52\", \"Goblin\"],\r\n  [\"3E0480\", \"Kingfisher Daisy\"],\r\n  [\"3E1C14\", \"Cedar\"],\r\n  [\"3E2B23\", \"English Walnut\"],\r\n  [\"3E2C1C\", \"Black Marlin\"],\r\n  [\"3E3A44\", \"Ship Gray\"],\r\n  [\"3EABBF\", \"Pelorous\"],\r\n  [\"3F2109\", \"Bronze\"],\r\n  [\"3F2500\", \"Cola\"],\r\n  [\"3F3002\", \"Madras\"],\r\n  [\"3F307F\", \"Minsk\"],\r\n  [\"3F4C3A\", \"Cabbage Pont\"],\r\n  [\"3F583B\", \"Tom Thumb\"],\r\n  [\"3F5D53\", \"Mineral Green\"],\r\n  [\"3FC1AA\", \"Puerto Rico\"],\r\n  [\"3FFF00\", \"Harlequin\"],\r\n  [\"401801\", \"Brown Pod\"],\r\n  [\"40291D\", \"Cork\"],\r\n  [\"403B38\", \"Masala\"],\r\n  [\"403D19\", \"Thatch Green\"],\r\n  [\"405169\", \"Fiord\"],\r\n  [\"40826D\", \"Viridian\"],\r\n  [\"40A860\", \"Chateau Green\"],\r\n  [\"410056\", \"Ripe Plum\"],\r\n  [\"411F10\", \"Paco\"],\r\n  [\"412010\", \"Deep Oak\"],\r\n  [\"413C37\", \"Merlin\"],\r\n  [\"414257\", \"Gun Powder\"],\r\n  [\"414C7D\", \"East Bay\"],\r\n  [\"4169E1\", \"Royal Blue\"],\r\n  [\"41AA78\", \"Ocean Green\"],\r\n  [\"420303\", \"Burnt Maroon\"],\r\n  [\"423921\", \"Lisbon Brown\"],\r\n  [\"427977\", \"Faded Jade\"],\r\n  [\"431560\", \"Scarlet Gum\"],\r\n  [\"433120\", \"Iroko\"],\r\n  [\"433E37\", \"Armadillo\"],\r\n  [\"434C59\", \"River Bed\"],\r\n  [\"436A0D\", \"Green Leaf\"],\r\n  [\"44012D\", \"Barossa\"],\r\n  [\"441D00\", \"Morocco Brown\"],\r\n  [\"444954\", \"Mako\"],\r\n  [\"454936\", \"Kelp\"],\r\n  [\"456CAC\", \"San Marino\"],\r\n  [\"45B1E8\", \"Picton Blue\"],\r\n  [\"460B41\", \"Loulou\"],\r\n  [\"462425\", \"Crater Brown\"],\r\n  [\"465945\", \"Gray Asparagus\"],\r\n  [\"4682B4\", \"Steel Blue\"],\r\n  [\"480404\", \"Rustic Red\"],\r\n  [\"480607\", \"Bulgarian Rose\"],\r\n  [\"480656\", \"Clairvoyant\"],\r\n  [\"481C1C\", \"Cocoa Bean\"],\r\n  [\"483131\", \"Woody Brown\"],\r\n  [\"483C32\", \"Taupe\"],\r\n  [\"49170C\", \"Van Cleef\"],\r\n  [\"492615\", \"Brown Derby\"],\r\n  [\"49371B\", \"Metallic Bronze\"],\r\n  [\"495400\", \"Verdun Green\"],\r\n  [\"496679\", \"Blue Bayoux\"],\r\n  [\"497183\", \"Bismark\"],\r\n  [\"4A2A04\", \"Bracken\"],\r\n  [\"4A3004\", \"Deep Bronze\"],\r\n  [\"4A3C30\", \"Mondo\"],\r\n  [\"4A4244\", \"Tundora\"],\r\n  [\"4A444B\", \"Gravel\"],\r\n  [\"4A4E5A\", \"Trout\"],\r\n  [\"4B0082\", \"Pigment Indigo\"],\r\n  [\"4B5D52\", \"Nandor\"],\r\n  [\"4C3024\", \"Saddle\"],\r\n  [\"4C4F56\", \"Abbey\"],\r\n  [\"4D0135\", \"Blackberry\"],\r\n  [\"4D0A18\", \"Cab Sav\"],\r\n  [\"4D1E01\", \"Indian Tan\"],\r\n  [\"4D282D\", \"Cowboy\"],\r\n  [\"4D282E\", \"Livid Brown\"],\r\n  [\"4D3833\", \"Rock\"],\r\n  [\"4D3D14\", \"Punga\"],\r\n  [\"4D400F\", \"Bronzetone\"],\r\n  [\"4D5328\", \"Woodland\"],\r\n  [\"4E0606\", \"Mahogany\"],\r\n  [\"4E2A5A\", \"Bossanova\"],\r\n  [\"4E3B41\", \"Matterhorn\"],\r\n  [\"4E420C\", \"Bronze Olive\"],\r\n  [\"4E4562\", \"Mulled Wine\"],\r\n  [\"4E6649\", \"Axolotl\"],\r\n  [\"4E7F9E\", \"Wedgewood\"],\r\n  [\"4EABD1\", \"Shakespeare\"],\r\n  [\"4F1C70\", \"Honey Flower\"],\r\n  [\"4F2398\", \"Daisy Bush\"],\r\n  [\"4F69C6\", \"Indigo\"],\r\n  [\"4F7942\", \"Fern Green\"],\r\n  [\"4F9D5D\", \"Fruit Salad\"],\r\n  [\"4FA83D\", \"Apple\"],\r\n  [\"504351\", \"Mortar\"],\r\n  [\"507096\", \"Kashmir Blue\"],\r\n  [\"507672\", \"Cutty Sark\"],\r\n  [\"50C878\", \"Emerald\"],\r\n  [\"514649\", \"Emperor\"],\r\n  [\"516E3D\", \"Chalet Green\"],\r\n  [\"517C66\", \"Como\"],\r\n  [\"51808F\", \"Smalt Blue\"],\r\n  [\"52001F\", \"Castro\"],\r\n  [\"520C17\", \"Maroon Oak\"],\r\n  [\"523C94\", \"Gigas\"],\r\n  [\"533455\", \"Voodoo\"],\r\n  [\"534491\", \"Victoria\"],\r\n  [\"53824B\", \"Hippie Green\"],\r\n  [\"541012\", \"Heath\"],\r\n  [\"544333\", \"Judge Gray\"],\r\n  [\"54534D\", \"Fuscous Gray\"],\r\n  [\"549019\", \"Vida Loca\"],\r\n  [\"55280C\", \"Cioccolato\"],\r\n  [\"555B10\", \"Saratoga\"],\r\n  [\"556D56\", \"Finlandia\"],\r\n  [\"5590D9\", \"Havelock Blue\"],\r\n  [\"56B4BE\", \"Fountain Blue\"],\r\n  [\"578363\", \"Spring Leaves\"],\r\n  [\"583401\", \"Saddle Brown\"],\r\n  [\"585562\", \"Scarpa Flow\"],\r\n  [\"587156\", \"Cactus\"],\r\n  [\"589AAF\", \"Hippie Blue\"],\r\n  [\"591D35\", \"Wine Berry\"],\r\n  [\"592804\", \"Brown Bramble\"],\r\n  [\"593737\", \"Congo Brown\"],\r\n  [\"594433\", \"Millbrook\"],\r\n  [\"5A6E9C\", \"Waikawa Gray\"],\r\n  [\"5A87A0\", \"Horizon\"],\r\n  [\"5B3013\", \"Jambalaya\"],\r\n  [\"5C0120\", \"Bordeaux\"],\r\n  [\"5C0536\", \"Mulberry Wood\"],\r\n  [\"5C2E01\", \"Carnaby Tan\"],\r\n  [\"5C5D75\", \"Comet\"],\r\n  [\"5D1E0F\", \"Redwood\"],\r\n  [\"5D4C51\", \"Don Juan\"],\r\n  [\"5D5C58\", \"Chicago\"],\r\n  [\"5D5E37\", \"Verdigris\"],\r\n  [\"5D7747\", \"Dingley\"],\r\n  [\"5DA19F\", \"Breaker Bay\"],\r\n  [\"5E483E\", \"Kabul\"],\r\n  [\"5E5D3B\", \"Hemlock\"],\r\n  [\"5F3D26\", \"Irish Coffee\"],\r\n  [\"5F5F6E\", \"Mid Gray\"],\r\n  [\"5F6672\", \"Shuttle Gray\"],\r\n  [\"5FA777\", \"Aqua Forest\"],\r\n  [\"5FB3AC\", \"Tradewind\"],\r\n  [\"604913\", \"Horses Neck\"],\r\n  [\"605B73\", \"Smoky\"],\r\n  [\"606E68\", \"Corduroy\"],\r\n  [\"6093D1\", \"Danube\"],\r\n  [\"612718\", \"Espresso\"],\r\n  [\"614051\", \"Eggplant\"],\r\n  [\"615D30\", \"Costa Del Sol\"],\r\n  [\"61845F\", \"Glade Green\"],\r\n  [\"622F30\", \"Buccaneer\"],\r\n  [\"623F2D\", \"Quincy\"],\r\n  [\"624E9A\", \"Butterfly Bush\"],\r\n  [\"625119\", \"West Coast\"],\r\n  [\"626649\", \"Finch\"],\r\n  [\"639A8F\", \"Patina\"],\r\n  [\"63B76C\", \"Fern\"],\r\n  [\"6456B7\", \"Blue Violet\"],\r\n  [\"646077\", \"Dolphin\"],\r\n  [\"646463\", \"Storm Dust\"],\r\n  [\"646A54\", \"Siam\"],\r\n  [\"646E75\", \"Nevada\"],\r\n  [\"6495ED\", \"Cornflower Blue\"],\r\n  [\"64CCDB\", \"Viking\"],\r\n  [\"65000B\", \"Rosewood\"],\r\n  [\"651A14\", \"Cherrywood\"],\r\n  [\"652DC1\", \"Purple Heart\"],\r\n  [\"657220\", \"Fern Frond\"],\r\n  [\"65745D\", \"Willow Grove\"],\r\n  [\"65869F\", \"Hoki\"],\r\n  [\"660045\", \"Pompadour\"],\r\n  [\"660099\", \"Purple\"],\r\n  [\"66023C\", \"Tyrian Purple\"],\r\n  [\"661010\", \"Dark Tan\"],\r\n  [\"66B58F\", \"Silver Tree\"],\r\n  [\"66FF00\", \"Bright Green\"],\r\n  [\"66FF66\", \"Screamin' Green\"],\r\n  [\"67032D\", \"Black Rose\"],\r\n  [\"675FA6\", \"Scampi\"],\r\n  [\"676662\", \"Ironside Gray\"],\r\n  [\"678975\", \"Viridian Green\"],\r\n  [\"67A712\", \"Christi\"],\r\n  [\"683600\", \"Nutmeg Wood Finish\"],\r\n  [\"685558\", \"Zambezi\"],\r\n  [\"685E6E\", \"Salt Box\"],\r\n  [\"692545\", \"Tawny Port\"],\r\n  [\"692D54\", \"Finn\"],\r\n  [\"695F62\", \"Scorpion\"],\r\n  [\"697E9A\", \"Lynch\"],\r\n  [\"6A442E\", \"Spice\"],\r\n  [\"6A5D1B\", \"Himalaya\"],\r\n  [\"6A6051\", \"Soya Bean\"],\r\n  [\"6B2A14\", \"Hairy Heath\"],\r\n  [\"6B3FA0\", \"Royal Purple\"],\r\n  [\"6B4E31\", \"Shingle Fawn\"],\r\n  [\"6B5755\", \"Dorado\"],\r\n  [\"6B8BA2\", \"Bermuda Gray\"],\r\n  [\"6B8E23\", \"Olive Drab\"],\r\n  [\"6C3082\", \"Eminence\"],\r\n  [\"6CDAE7\", \"Turquoise Blue\"],\r\n  [\"6D0101\", \"Lonestar\"],\r\n  [\"6D5E54\", \"Pine Cone\"],\r\n  [\"6D6C6C\", \"Dove Gray\"],\r\n  [\"6D9292\", \"Juniper\"],\r\n  [\"6D92A1\", \"Gothic\"],\r\n  [\"6E0902\", \"Red Oxide\"],\r\n  [\"6E1D14\", \"Moccaccino\"],\r\n  [\"6E4826\", \"Pickled Bean\"],\r\n  [\"6E4B26\", \"Dallas\"],\r\n  [\"6E6D57\", \"Kokoda\"],\r\n  [\"6E7783\", \"Pale Sky\"],\r\n  [\"6F440C\", \"Cafe Royale\"],\r\n  [\"6F6A61\", \"Flint\"],\r\n  [\"6F8E63\", \"Highland\"],\r\n  [\"6F9D02\", \"Limeade\"],\r\n  [\"6FD0C5\", \"Downy\"],\r\n  [\"701C1C\", \"Persian Plum\"],\r\n  [\"704214\", \"Sepia\"],\r\n  [\"704A07\", \"Antique Bronze\"],\r\n  [\"704F50\", \"Ferra\"],\r\n  [\"706555\", \"Coffee\"],\r\n  [\"708090\", \"Slate Gray\"],\r\n  [\"711A00\", \"Cedar Wood Finish\"],\r\n  [\"71291D\", \"Metallic Copper\"],\r\n  [\"714693\", \"Affair\"],\r\n  [\"714AB2\", \"Studio\"],\r\n  [\"715D47\", \"Tobacco Brown\"],\r\n  [\"716338\", \"Yellow Metal\"],\r\n  [\"716B56\", \"Peat\"],\r\n  [\"716E10\", \"Olivetone\"],\r\n  [\"717486\", \"Storm Gray\"],\r\n  [\"718080\", \"Sirocco\"],\r\n  [\"71D9E2\", \"Aquamarine Blue\"],\r\n  [\"72010F\", \"Venetian Red\"],\r\n  [\"724A2F\", \"Old Copper\"],\r\n  [\"726D4E\", \"Go Ben\"],\r\n  [\"727B89\", \"Raven\"],\r\n  [\"731E8F\", \"Seance\"],\r\n  [\"734A12\", \"Raw Umber\"],\r\n  [\"736C9F\", \"Kimberly\"],\r\n  [\"736D58\", \"Crocodile\"],\r\n  [\"737829\", \"Crete\"],\r\n  [\"738678\", \"Xanadu\"],\r\n  [\"74640D\", \"Spicy Mustard\"],\r\n  [\"747D63\", \"Limed Ash\"],\r\n  [\"747D83\", \"Rolling Stone\"],\r\n  [\"748881\", \"Blue Smoke\"],\r\n  [\"749378\", \"Laurel\"],\r\n  [\"74C365\", \"Mantis\"],\r\n  [\"755A57\", \"Russett\"],\r\n  [\"7563A8\", \"Deluge\"],\r\n  [\"76395D\", \"Cosmic\"],\r\n  [\"7666C6\", \"Blue Marguerite\"],\r\n  [\"76BD17\", \"Lima\"],\r\n  [\"76D7EA\", \"Sky Blue\"],\r\n  [\"770F05\", \"Dark Burgundy\"],\r\n  [\"771F1F\", \"Crown of Thorns\"],\r\n  [\"773F1A\", \"Walnut\"],\r\n  [\"776F61\", \"Pablo\"],\r\n  [\"778120\", \"Pacifika\"],\r\n  [\"779E86\", \"Oxley\"],\r\n  [\"77DD77\", \"Pastel Green\"],\r\n  [\"780109\", \"Japanese Maple\"],\r\n  [\"782D19\", \"Mocha\"],\r\n  [\"782F16\", \"Peanut\"],\r\n  [\"78866B\", \"Camouflage Green\"],\r\n  [\"788A25\", \"Wasabi\"],\r\n  [\"788BBA\", \"Ship Cove\"],\r\n  [\"78A39C\", \"Sea Nymph\"],\r\n  [\"795D4C\", \"Roman Coffee\"],\r\n  [\"796878\", \"Old Lavender\"],\r\n  [\"796989\", \"Rum\"],\r\n  [\"796A78\", \"Fedora\"],\r\n  [\"796D62\", \"Sandstone\"],\r\n  [\"79DEEC\", \"Spray\"],\r\n  [\"7A013A\", \"Siren\"],\r\n  [\"7A58C1\", \"Fuchsia Blue\"],\r\n  [\"7A7A7A\", \"Boulder\"],\r\n  [\"7A89B8\", \"Wild Blue Yonder\"],\r\n  [\"7AC488\", \"De York\"],\r\n  [\"7B3801\", \"Red Beech\"],\r\n  [\"7B3F00\", \"Cinnamon\"],\r\n  [\"7B6608\", \"Yukon Gold\"],\r\n  [\"7B7874\", \"Tapa\"],\r\n  [\"7B7C94\", \"Waterloo \"],\r\n  [\"7B8265\", \"Flax Smoke\"],\r\n  [\"7B9F80\", \"Amulet\"],\r\n  [\"7BA05B\", \"Asparagus\"],\r\n  [\"7C1C05\", \"Kenyan Copper\"],\r\n  [\"7C7631\", \"Pesto\"],\r\n  [\"7C778A\", \"Topaz\"],\r\n  [\"7C7B7A\", \"Concord\"],\r\n  [\"7C7B82\", \"Jumbo\"],\r\n  [\"7C881A\", \"Trendy Green\"],\r\n  [\"7CA1A6\", \"Gumbo\"],\r\n  [\"7CB0A1\", \"Acapulco\"],\r\n  [\"7CB7BB\", \"Neptune\"],\r\n  [\"7D2C14\", \"Pueblo\"],\r\n  [\"7DA98D\", \"Bay Leaf\"],\r\n  [\"7DC8F7\", \"Malibu\"],\r\n  [\"7DD8C6\", \"Bermuda\"],\r\n  [\"7E3A15\", \"Copper Canyon\"],\r\n  [\"7F1734\", \"Claret\"],\r\n  [\"7F3A02\", \"Peru Tan\"],\r\n  [\"7F626D\", \"Falcon\"],\r\n  [\"7F7589\", \"Mobster\"],\r\n  [\"7F76D3\", \"Moody Blue\"],\r\n  [\"7FFF00\", \"Chartreuse\"],\r\n  [\"7FFFD4\", \"Aquamarine\"],\r\n  [\"800000\", \"Maroon\"],\r\n  [\"800B47\", \"Rose Bud Cherry\"],\r\n  [\"801818\", \"Falu Red\"],\r\n  [\"80341F\", \"Red Robin\"],\r\n  [\"803790\", \"Vivid Violet\"],\r\n  [\"80461B\", \"Russet\"],\r\n  [\"807E79\", \"Friar Gray\"],\r\n  [\"808000\", \"Olive\"],\r\n  [\"808080\", \"Gray\"],\r\n  [\"80B3AE\", \"Gulf Stream\"],\r\n  [\"80B3C4\", \"Glacier\"],\r\n  [\"80CCEA\", \"Seagull\"],\r\n  [\"81422C\", \"Nutmeg\"],\r\n  [\"816E71\", \"Spicy Pink\"],\r\n  [\"817377\", \"Empress\"],\r\n  [\"819885\", \"Spanish Green\"],\r\n  [\"826F65\", \"Sand Dune\"],\r\n  [\"828685\", \"Gunsmoke\"],\r\n  [\"828F72\", \"Battleship Gray\"],\r\n  [\"831923\", \"Merlot\"],\r\n  [\"837050\", \"Shadow\"],\r\n  [\"83AA5D\", \"Chelsea Cucumber\"],\r\n  [\"83D0C6\", \"Monte Carlo\"],\r\n  [\"843179\", \"Plum\"],\r\n  [\"84A0A0\", \"Granny Smith\"],\r\n  [\"8581D9\", \"Chetwode Blue\"],\r\n  [\"858470\", \"Bandicoot\"],\r\n  [\"859FAF\", \"Bali Hai\"],\r\n  [\"85C4CC\", \"Half Baked\"],\r\n  [\"860111\", \"Red Devil\"],\r\n  [\"863C3C\", \"Lotus\"],\r\n  [\"86483C\", \"Ironstone\"],\r\n  [\"864D1E\", \"Bull Shot\"],\r\n  [\"86560A\", \"Rusty Nail\"],\r\n  [\"868974\", \"Bitter\"],\r\n  [\"86949F\", \"Regent Gray\"],\r\n  [\"871550\", \"Disco\"],\r\n  [\"87756E\", \"Americano\"],\r\n  [\"877C7B\", \"Hurricane\"],\r\n  [\"878D91\", \"Oslo Gray\"],\r\n  [\"87AB39\", \"Sushi\"],\r\n  [\"885342\", \"Spicy Mix\"],\r\n  [\"886221\", \"Kumera\"],\r\n  [\"888387\", \"Suva Gray\"],\r\n  [\"888D65\", \"Avocado\"],\r\n  [\"893456\", \"Camelot\"],\r\n  [\"893843\", \"Solid Pink\"],\r\n  [\"894367\", \"Cannon Pink\"],\r\n  [\"897D6D\", \"Makara\"],\r\n  [\"8A3324\", \"Burnt Umber\"],\r\n  [\"8A73D6\", \"True V\"],\r\n  [\"8A8360\", \"Clay Creek\"],\r\n  [\"8A8389\", \"Monsoon\"],\r\n  [\"8A8F8A\", \"Stack\"],\r\n  [\"8AB9F1\", \"Jordy Blue\"],\r\n  [\"8B00FF\", \"Electric Violet\"],\r\n  [\"8B0723\", \"Monarch\"],\r\n  [\"8B6B0B\", \"Corn Harvest\"],\r\n  [\"8B8470\", \"Olive Haze\"],\r\n  [\"8B847E\", \"Schooner\"],\r\n  [\"8B8680\", \"Natural Gray\"],\r\n  [\"8B9C90\", \"Mantle\"],\r\n  [\"8B9FEE\", \"Portage\"],\r\n  [\"8BA690\", \"Envy\"],\r\n  [\"8BA9A5\", \"Cascade\"],\r\n  [\"8BE6D8\", \"Riptide\"],\r\n  [\"8C055E\", \"Cardinal Pink\"],\r\n  [\"8C472F\", \"Mule Fawn\"],\r\n  [\"8C5738\", \"Potters Clay\"],\r\n  [\"8C6495\", \"Trendy Pink\"],\r\n  [\"8D0226\", \"Paprika\"],\r\n  [\"8D3D38\", \"Sanguine Brown\"],\r\n  [\"8D3F3F\", \"Tosca\"],\r\n  [\"8D7662\", \"Cement\"],\r\n  [\"8D8974\", \"Granite Green\"],\r\n  [\"8D90A1\", \"Manatee\"],\r\n  [\"8DA8CC\", \"Polo Blue\"],\r\n  [\"8E0000\", \"Red Berry\"],\r\n  [\"8E4D1E\", \"Rope\"],\r\n  [\"8E6F70\", \"Opium\"],\r\n  [\"8E775E\", \"Domino\"],\r\n  [\"8E8190\", \"Mamba\"],\r\n  [\"8EABC1\", \"Nepal\"],\r\n  [\"8F021C\", \"Pohutukawa\"],\r\n  [\"8F3E33\", \"El Salva\"],\r\n  [\"8F4B0E\", \"Korma\"],\r\n  [\"8F8176\", \"Squirrel\"],\r\n  [\"8FD6B4\", \"Vista Blue\"],\r\n  [\"900020\", \"Burgundy\"],\r\n  [\"901E1E\", \"Old Brick\"],\r\n  [\"907874\", \"Hemp\"],\r\n  [\"907B71\", \"Almond Frost\"],\r\n  [\"908D39\", \"Sycamore\"],\r\n  [\"92000A\", \"Sangria\"],\r\n  [\"924321\", \"Cumin\"],\r\n  [\"926F5B\", \"Beaver\"],\r\n  [\"928573\", \"Stonewall\"],\r\n  [\"928590\", \"Venus\"],\r\n  [\"9370DB\", \"Medium Purple\"],\r\n  [\"93CCEA\", \"Cornflower\"],\r\n  [\"93DFB8\", \"Algae Green\"],\r\n  [\"944747\", \"Copper Rust\"],\r\n  [\"948771\", \"Arrowtown\"],\r\n  [\"950015\", \"Scarlett\"],\r\n  [\"956387\", \"Strikemaster\"],\r\n  [\"959396\", \"Mountain Mist\"],\r\n  [\"960018\", \"Carmine\"],\r\n  [\"964B00\", \"Brown\"],\r\n  [\"967059\", \"Leather\"],\r\n  [\"9678B6\", \"Purple Mountain's Majesty\"],\r\n  [\"967BB6\", \"Lavender Purple\"],\r\n  [\"96A8A1\", \"Pewter\"],\r\n  [\"96BBAB\", \"Summer Green\"],\r\n  [\"97605D\", \"Au Chico\"],\r\n  [\"9771B5\", \"Wisteria\"],\r\n  [\"97CD2D\", \"Atlantis\"],\r\n  [\"983D61\", \"Vin Rouge\"],\r\n  [\"9874D3\", \"Lilac Bush\"],\r\n  [\"98777B\", \"Bazaar\"],\r\n  [\"98811B\", \"Hacienda\"],\r\n  [\"988D77\", \"Pale Oyster\"],\r\n  [\"98FF98\", \"Mint Green\"],\r\n  [\"990066\", \"Fresh Eggplant\"],\r\n  [\"991199\", \"Violet Eggplant\"],\r\n  [\"991613\", \"Tamarillo\"],\r\n  [\"991B07\", \"Totem Pole\"],\r\n  [\"996666\", \"Copper Rose\"],\r\n  [\"9966CC\", \"Amethyst\"],\r\n  [\"997A8D\", \"Mountbatten Pink\"],\r\n  [\"9999CC\", \"Blue Bell\"],\r\n  [\"9A3820\", \"Prairie Sand\"],\r\n  [\"9A6E61\", \"Toast\"],\r\n  [\"9A9577\", \"Gurkha\"],\r\n  [\"9AB973\", \"Olivine\"],\r\n  [\"9AC2B8\", \"Shadow Green\"],\r\n  [\"9B4703\", \"Oregon\"],\r\n  [\"9B9E8F\", \"Lemon Grass\"],\r\n  [\"9C3336\", \"Stiletto\"],\r\n  [\"9D5616\", \"Hawaiian Tan\"],\r\n  [\"9DACB7\", \"Gull Gray\"],\r\n  [\"9DC209\", \"Pistachio\"],\r\n  [\"9DE093\", \"Granny Smith Apple\"],\r\n  [\"9DE5FF\", \"Anakiwa\"],\r\n  [\"9E5302\", \"Chelsea Gem\"],\r\n  [\"9E5B40\", \"Sepia Skin\"],\r\n  [\"9EA587\", \"Sage\"],\r\n  [\"9EA91F\", \"Citron\"],\r\n  [\"9EB1CD\", \"Rock Blue\"],\r\n  [\"9EDEE0\", \"Morning Glory\"],\r\n  [\"9F381D\", \"Cognac\"],\r\n  [\"9F821C\", \"Reef Gold\"],\r\n  [\"9F9F9C\", \"Star Dust\"],\r\n  [\"9FA0B1\", \"Santas Gray\"],\r\n  [\"9FD7D3\", \"Sinbad\"],\r\n  [\"9FDD8C\", \"Feijoa\"],\r\n  [\"A02712\", \"Tabasco\"],\r\n  [\"A1750D\", \"Buttered Rum\"],\r\n  [\"A1ADB5\", \"Hit Gray\"],\r\n  [\"A1C50A\", \"Citrus\"],\r\n  [\"A1DAD7\", \"Aqua Island\"],\r\n  [\"A1E9DE\", \"Water Leaf\"],\r\n  [\"A2006D\", \"Flirt\"],\r\n  [\"A23B6C\", \"Rouge\"],\r\n  [\"A26645\", \"Cape Palliser\"],\r\n  [\"A2AAB3\", \"Gray Chateau\"],\r\n  [\"A2AEAB\", \"Edward\"],\r\n  [\"A3807B\", \"Pharlap\"],\r\n  [\"A397B4\", \"Amethyst Smoke\"],\r\n  [\"A3E3ED\", \"Blizzard Blue\"],\r\n  [\"A4A49D\", \"Delta\"],\r\n  [\"A4A6D3\", \"Wistful\"],\r\n  [\"A4AF6E\", \"Green Smoke\"],\r\n  [\"A50B5E\", \"Jazzberry Jam\"],\r\n  [\"A59B91\", \"Zorba\"],\r\n  [\"A5CB0C\", \"Bahia\"],\r\n  [\"A62F20\", \"Roof Terracotta\"],\r\n  [\"A65529\", \"Paarl\"],\r\n  [\"A68B5B\", \"Barley Corn\"],\r\n  [\"A69279\", \"Donkey Brown\"],\r\n  [\"A6A29A\", \"Dawn\"],\r\n  [\"A72525\", \"Mexican Red\"],\r\n  [\"A7882C\", \"Luxor Gold\"],\r\n  [\"A85307\", \"Rich Gold\"],\r\n  [\"A86515\", \"Reno Sand\"],\r\n  [\"A86B6B\", \"Coral Tree\"],\r\n  [\"A8989B\", \"Dusty Gray\"],\r\n  [\"A899E6\", \"Dull Lavender\"],\r\n  [\"A8A589\", \"Tallow\"],\r\n  [\"A8AE9C\", \"Bud\"],\r\n  [\"A8AF8E\", \"Locust\"],\r\n  [\"A8BD9F\", \"Norway\"],\r\n  [\"A8E3BD\", \"Chinook\"],\r\n  [\"A9A491\", \"Gray Olive\"],\r\n  [\"A9ACB6\", \"Aluminium\"],\r\n  [\"A9B2C3\", \"Cadet Blue\"],\r\n  [\"A9B497\", \"Schist\"],\r\n  [\"A9BDBF\", \"Tower Gray\"],\r\n  [\"A9BEF2\", \"Perano\"],\r\n  [\"A9C6C2\", \"Opal\"],\r\n  [\"AA375A\", \"Night Shadz\"],\r\n  [\"AA4203\", \"Fire\"],\r\n  [\"AA8B5B\", \"Muesli\"],\r\n  [\"AA8D6F\", \"Sandal\"],\r\n  [\"AAA5A9\", \"Shady Lady\"],\r\n  [\"AAA9CD\", \"Logan\"],\r\n  [\"AAABB7\", \"Spun Pearl\"],\r\n  [\"AAD6E6\", \"Regent St Blue\"],\r\n  [\"AAF0D1\", \"Magic Mint\"],\r\n  [\"AB0563\", \"Lipstick\"],\r\n  [\"AB3472\", \"Royal Heath\"],\r\n  [\"AB917A\", \"Sandrift\"],\r\n  [\"ABA0D9\", \"Cold Purple\"],\r\n  [\"ABA196\", \"Bronco\"],\r\n  [\"AC8A56\", \"Limed Oak\"],\r\n  [\"AC91CE\", \"East Side\"],\r\n  [\"AC9E22\", \"Lemon Ginger\"],\r\n  [\"ACA494\", \"Napa\"],\r\n  [\"ACA586\", \"Hillary\"],\r\n  [\"ACA59F\", \"Cloudy\"],\r\n  [\"ACACAC\", \"Silver Chalice\"],\r\n  [\"ACB78E\", \"Swamp Green\"],\r\n  [\"ACCBB1\", \"Spring Rain\"],\r\n  [\"ACDD4D\", \"Conifer\"],\r\n  [\"ACE1AF\", \"Celadon\"],\r\n  [\"AD781B\", \"Mandalay\"],\r\n  [\"ADBED1\", \"Casper\"],\r\n  [\"ADDFAD\", \"Moss Green\"],\r\n  [\"ADE6C4\", \"Padua\"],\r\n  [\"ADFF2F\", \"Green Yellow\"],\r\n  [\"AE4560\", \"Hippie Pink\"],\r\n  [\"AE6020\", \"Desert\"],\r\n  [\"AE809E\", \"Bouquet\"],\r\n  [\"AF4035\", \"Medium Carmine\"],\r\n  [\"AF4D43\", \"Apple Blossom\"],\r\n  [\"AF593E\", \"Brown Rust\"],\r\n  [\"AF8751\", \"Driftwood\"],\r\n  [\"AF8F2C\", \"Alpine\"],\r\n  [\"AF9F1C\", \"Lucky\"],\r\n  [\"AFA09E\", \"Martini\"],\r\n  [\"AFB1B8\", \"Bombay\"],\r\n  [\"AFBDD9\", \"Pigeon Post\"],\r\n  [\"B04C6A\", \"Cadillac\"],\r\n  [\"B05D54\", \"Matrix\"],\r\n  [\"B05E81\", \"Tapestry\"],\r\n  [\"B06608\", \"Mai Tai\"],\r\n  [\"B09A95\", \"Del Rio\"],\r\n  [\"B0E0E6\", \"Powder Blue\"],\r\n  [\"B0E313\", \"Inch Worm\"],\r\n  [\"B10000\", \"Bright Red\"],\r\n  [\"B14A0B\", \"Vesuvius\"],\r\n  [\"B1610B\", \"Pumpkin Skin\"],\r\n  [\"B16D52\", \"Santa Fe\"],\r\n  [\"B19461\", \"Teak\"],\r\n  [\"B1E2C1\", \"Fringy Flower\"],\r\n  [\"B1F4E7\", \"Ice Cold\"],\r\n  [\"B20931\", \"Shiraz\"],\r\n  [\"B2A1EA\", \"Biloba Flower\"],\r\n  [\"B32D29\", \"Tall Poppy\"],\r\n  [\"B35213\", \"Fiery Orange\"],\r\n  [\"B38007\", \"Hot Toddy\"],\r\n  [\"B3AF95\", \"Taupe Gray\"],\r\n  [\"B3C110\", \"La Rioja\"],\r\n  [\"B43332\", \"Well Read\"],\r\n  [\"B44668\", \"Blush\"],\r\n  [\"B4CFD3\", \"Jungle Mist\"],\r\n  [\"B57281\", \"Turkish Rose\"],\r\n  [\"B57EDC\", \"Lavender\"],\r\n  [\"B5A27F\", \"Mongoose\"],\r\n  [\"B5B35C\", \"Olive Green\"],\r\n  [\"B5D2CE\", \"Jet Stream\"],\r\n  [\"B5ECDF\", \"Cruise\"],\r\n  [\"B6316C\", \"Hibiscus\"],\r\n  [\"B69D98\", \"Thatch\"],\r\n  [\"B6B095\", \"Heathered Gray\"],\r\n  [\"B6BAA4\", \"Eagle\"],\r\n  [\"B6D1EA\", \"Spindle\"],\r\n  [\"B6D3BF\", \"Gum Leaf\"],\r\n  [\"B7410E\", \"Rust\"],\r\n  [\"B78E5C\", \"Muddy Waters\"],\r\n  [\"B7A214\", \"Sahara\"],\r\n  [\"B7A458\", \"Husk\"],\r\n  [\"B7B1B1\", \"Nobel\"],\r\n  [\"B7C3D0\", \"Heather\"],\r\n  [\"B7F0BE\", \"Madang\"],\r\n  [\"B81104\", \"Milano Red\"],\r\n  [\"B87333\", \"Copper\"],\r\n  [\"B8B56A\", \"Gimblet\"],\r\n  [\"B8C1B1\", \"Green Spring\"],\r\n  [\"B8C25D\", \"Celery\"],\r\n  [\"B8E0F9\", \"Sail\"],\r\n  [\"B94E48\", \"Chestnut\"],\r\n  [\"B95140\", \"Crail\"],\r\n  [\"B98D28\", \"Marigold\"],\r\n  [\"B9C46A\", \"Wild Willow\"],\r\n  [\"B9C8AC\", \"Rainee\"],\r\n  [\"BA0101\", \"Guardsman Red\"],\r\n  [\"BA450C\", \"Rock Spray\"],\r\n  [\"BA6F1E\", \"Bourbon\"],\r\n  [\"BA7F03\", \"Pirate Gold\"],\r\n  [\"BAB1A2\", \"Nomad\"],\r\n  [\"BAC7C9\", \"Submarine\"],\r\n  [\"BAEEF9\", \"Charlotte\"],\r\n  [\"BB3385\", \"Medium Red Violet\"],\r\n  [\"BB8983\", \"Brandy Rose\"],\r\n  [\"BBD009\", \"Rio Grande\"],\r\n  [\"BBD7C1\", \"Surf\"],\r\n  [\"BCC9C2\", \"Powder Ash\"],\r\n  [\"BD5E2E\", \"Tuscany\"],\r\n  [\"BD978E\", \"Quicksand\"],\r\n  [\"BDB1A8\", \"Silk\"],\r\n  [\"BDB2A1\", \"Malta\"],\r\n  [\"BDB3C7\", \"Chatelle\"],\r\n  [\"BDBBD7\", \"Lavender Gray\"],\r\n  [\"BDBDC6\", \"French Gray\"],\r\n  [\"BDC8B3\", \"Clay Ash\"],\r\n  [\"BDC9CE\", \"Loblolly\"],\r\n  [\"BDEDFD\", \"French Pass\"],\r\n  [\"BEA6C3\", \"London Hue\"],\r\n  [\"BEB5B7\", \"Pink Swan\"],\r\n  [\"BEDE0D\", \"Fuego\"],\r\n  [\"BF5500\", \"Rose of Sharon\"],\r\n  [\"BFB8B0\", \"Tide\"],\r\n  [\"BFBED8\", \"Blue Haze\"],\r\n  [\"BFC1C2\", \"Silver Sand\"],\r\n  [\"BFC921\", \"Key Lime Pie\"],\r\n  [\"BFDBE2\", \"Ziggurat\"],\r\n  [\"BFFF00\", \"Lime\"],\r\n  [\"C02B18\", \"Thunderbird\"],\r\n  [\"C04737\", \"Mojo\"],\r\n  [\"C08081\", \"Old Rose\"],\r\n  [\"C0C0C0\", \"Silver\"],\r\n  [\"C0D3B9\", \"Pale Leaf\"],\r\n  [\"C0D8B6\", \"Pixie Green\"],\r\n  [\"C1440E\", \"Tia Maria\"],\r\n  [\"C154C1\", \"Fuchsia Pink\"],\r\n  [\"C1A004\", \"Buddha Gold\"],\r\n  [\"C1B7A4\", \"Bison Hide\"],\r\n  [\"C1BAB0\", \"Tea\"],\r\n  [\"C1BECD\", \"Gray Suit\"],\r\n  [\"C1D7B0\", \"Sprout\"],\r\n  [\"C1F07C\", \"Sulu\"],\r\n  [\"C26B03\", \"Indochine\"],\r\n  [\"C2955D\", \"Twine\"],\r\n  [\"C2BDB6\", \"Cotton Seed\"],\r\n  [\"C2CAC4\", \"Pumice\"],\r\n  [\"C2E8E5\", \"Jagged Ice\"],\r\n  [\"C32148\", \"Maroon Flush\"],\r\n  [\"C3B091\", \"Indian Khaki\"],\r\n  [\"C3BFC1\", \"Pale Slate\"],\r\n  [\"C3C3BD\", \"Gray Nickel\"],\r\n  [\"C3CDE6\", \"Periwinkle Gray\"],\r\n  [\"C3D1D1\", \"Tiara\"],\r\n  [\"C3DDF9\", \"Tropical Blue\"],\r\n  [\"C41E3A\", \"Cardinal\"],\r\n  [\"C45655\", \"Fuzzy Wuzzy Brown\"],\r\n  [\"C45719\", \"Orange Roughy\"],\r\n  [\"C4C4BC\", \"Mist Gray\"],\r\n  [\"C4D0B0\", \"Coriander\"],\r\n  [\"C4F4EB\", \"Mint Tulip\"],\r\n  [\"C54B8C\", \"Mulberry\"],\r\n  [\"C59922\", \"Nugget\"],\r\n  [\"C5994B\", \"Tussock\"],\r\n  [\"C5DBCA\", \"Sea Mist\"],\r\n  [\"C5E17A\", \"Yellow Green\"],\r\n  [\"C62D42\", \"Brick Red\"],\r\n  [\"C6726B\", \"Contessa\"],\r\n  [\"C69191\", \"Oriental Pink\"],\r\n  [\"C6A84B\", \"Roti\"],\r\n  [\"C6C3B5\", \"Ash\"],\r\n  [\"C6C8BD\", \"Kangaroo\"],\r\n  [\"C6E610\", \"Las Palmas\"],\r\n  [\"C7031E\", \"Monza\"],\r\n  [\"C71585\", \"Red Violet\"],\r\n  [\"C7BCA2\", \"Coral Reef\"],\r\n  [\"C7C1FF\", \"Melrose\"],\r\n  [\"C7C4BF\", \"Cloud\"],\r\n  [\"C7C9D5\", \"Ghost\"],\r\n  [\"C7CD90\", \"Pine Glade\"],\r\n  [\"C7DDE5\", \"Botticelli\"],\r\n  [\"C88A65\", \"Antique Brass\"],\r\n  [\"C8A2C8\", \"Lilac\"],\r\n  [\"C8A528\", \"Hokey Pokey\"],\r\n  [\"C8AABF\", \"Lily\"],\r\n  [\"C8B568\", \"Laser\"],\r\n  [\"C8E3D7\", \"Edgewater\"],\r\n  [\"C96323\", \"Piper\"],\r\n  [\"C99415\", \"Pizza\"],\r\n  [\"C9A0DC\", \"Light Wisteria\"],\r\n  [\"C9B29B\", \"Rodeo Dust\"],\r\n  [\"C9B35B\", \"Sundance\"],\r\n  [\"C9B93B\", \"Earls Green\"],\r\n  [\"C9C0BB\", \"Silver Rust\"],\r\n  [\"C9D9D2\", \"Conch\"],\r\n  [\"C9FFA2\", \"Reef\"],\r\n  [\"C9FFE5\", \"Aero Blue\"],\r\n  [\"CA3435\", \"Flush Mahogany\"],\r\n  [\"CABB48\", \"Turmeric\"],\r\n  [\"CADCD4\", \"Paris White\"],\r\n  [\"CAE00D\", \"Bitter Lemon\"],\r\n  [\"CAE6DA\", \"Skeptic\"],\r\n  [\"CB8FA9\", \"Viola\"],\r\n  [\"CBCAB6\", \"Foggy Gray\"],\r\n  [\"CBD3B0\", \"Green Mist\"],\r\n  [\"CBDBD6\", \"Nebula\"],\r\n  [\"CC3333\", \"Persian Red\"],\r\n  [\"CC5500\", \"Burnt Orange\"],\r\n  [\"CC7722\", \"Ochre\"],\r\n  [\"CC8899\", \"Puce\"],\r\n  [\"CCCAA8\", \"Thistle Green\"],\r\n  [\"CCCCFF\", \"Periwinkle\"],\r\n  [\"CCFF00\", \"Electric Lime\"],\r\n  [\"CD5700\", \"Tenn\"],\r\n  [\"CD5C5C\", \"Chestnut Rose\"],\r\n  [\"CD8429\", \"Brandy Punch\"],\r\n  [\"CDF4FF\", \"Onahau\"],\r\n  [\"CEB98F\", \"Sorrell Brown\"],\r\n  [\"CEBABA\", \"Cold Turkey\"],\r\n  [\"CEC291\", \"Yuma\"],\r\n  [\"CEC7A7\", \"Chino\"],\r\n  [\"CFA39D\", \"Eunry\"],\r\n  [\"CFB53B\", \"Old Gold\"],\r\n  [\"CFDCCF\", \"Tasman\"],\r\n  [\"CFE5D2\", \"Surf Crest\"],\r\n  [\"CFF9F3\", \"Humming Bird\"],\r\n  [\"CFFAF4\", \"Scandal\"],\r\n  [\"D05F04\", \"Red Stage\"],\r\n  [\"D06DA1\", \"Hopbush\"],\r\n  [\"D07D12\", \"Meteor\"],\r\n  [\"D0BEF8\", \"Perfume\"],\r\n  [\"D0C0E5\", \"Prelude\"],\r\n  [\"D0F0C0\", \"Tea Green\"],\r\n  [\"D18F1B\", \"Geebung\"],\r\n  [\"D1BEA8\", \"Vanilla\"],\r\n  [\"D1C6B4\", \"Soft Amber\"],\r\n  [\"D1D2CA\", \"Celeste\"],\r\n  [\"D1D2DD\", \"Mischka\"],\r\n  [\"D1E231\", \"Pear\"],\r\n  [\"D2691E\", \"Hot Cinnamon\"],\r\n  [\"D27D46\", \"Raw Sienna\"],\r\n  [\"D29EAA\", \"Careys Pink\"],\r\n  [\"D2B48C\", \"Tan\"],\r\n  [\"D2DA97\", \"Deco\"],\r\n  [\"D2F6DE\", \"Blue Romance\"],\r\n  [\"D2F8B0\", \"Gossip\"],\r\n  [\"D3CBBA\", \"Sisal\"],\r\n  [\"D3CDC5\", \"Swirl\"],\r\n  [\"D47494\", \"Charm\"],\r\n  [\"D4B6AF\", \"Clam Shell\"],\r\n  [\"D4BF8D\", \"Straw\"],\r\n  [\"D4C4A8\", \"Akaroa\"],\r\n  [\"D4CD16\", \"Bird Flower\"],\r\n  [\"D4D7D9\", \"Iron\"],\r\n  [\"D4DFE2\", \"Geyser\"],\r\n  [\"D4E2FC\", \"Hawkes Blue\"],\r\n  [\"D54600\", \"Grenadier\"],\r\n  [\"D591A4\", \"Can Can\"],\r\n  [\"D59A6F\", \"Whiskey\"],\r\n  [\"D5D195\", \"Winter Hazel\"],\r\n  [\"D5F6E3\", \"Granny Apple\"],\r\n  [\"D69188\", \"My Pink\"],\r\n  [\"D6C562\", \"Tacha\"],\r\n  [\"D6CEF6\", \"Moon Raker\"],\r\n  [\"D6D6D1\", \"Quill Gray\"],\r\n  [\"D6FFDB\", \"Snowy Mint\"],\r\n  [\"D7837F\", \"New York Pink\"],\r\n  [\"D7C498\", \"Pavlova\"],\r\n  [\"D7D0FF\", \"Fog\"],\r\n  [\"D84437\", \"Valencia\"],\r\n  [\"D87C63\", \"Japonica\"],\r\n  [\"D8BFD8\", \"Thistle\"],\r\n  [\"D8C2D5\", \"Maverick\"],\r\n  [\"D8FCFA\", \"Foam\"],\r\n  [\"D94972\", \"Cabaret\"],\r\n  [\"D99376\", \"Burning Sand\"],\r\n  [\"D9B99B\", \"Cameo\"],\r\n  [\"D9D6CF\", \"Timberwolf\"],\r\n  [\"D9DCC1\", \"Tana\"],\r\n  [\"D9E4F5\", \"Link Water\"],\r\n  [\"D9F7FF\", \"Mabel\"],\r\n  [\"DA3287\", \"Cerise\"],\r\n  [\"DA5B38\", \"Flame Pea\"],\r\n  [\"DA6304\", \"Bamboo\"],\r\n  [\"DA6A41\", \"Red Damask\"],\r\n  [\"DA70D6\", \"Orchid\"],\r\n  [\"DA8A67\", \"Copperfield\"],\r\n  [\"DAA520\", \"Golden Grass\"],\r\n  [\"DAECD6\", \"Zanah\"],\r\n  [\"DAF4F0\", \"Iceberg\"],\r\n  [\"DAFAFF\", \"Oyster Bay\"],\r\n  [\"DB5079\", \"Cranberry\"],\r\n  [\"DB9690\", \"Petite Orchid\"],\r\n  [\"DB995E\", \"Di Serria\"],\r\n  [\"DBDBDB\", \"Alto\"],\r\n  [\"DBFFF8\", \"Frosted Mint\"],\r\n  [\"DC143C\", \"Crimson\"],\r\n  [\"DC4333\", \"Punch\"],\r\n  [\"DCB20C\", \"Galliano\"],\r\n  [\"DCB4BC\", \"Blossom\"],\r\n  [\"DCD747\", \"Wattle\"],\r\n  [\"DCD9D2\", \"Westar\"],\r\n  [\"DCDDCC\", \"Moon Mist\"],\r\n  [\"DCEDB4\", \"Caper\"],\r\n  [\"DCF0EA\", \"Swans Down\"],\r\n  [\"DDD6D5\", \"Swiss Coffee\"],\r\n  [\"DDF9F1\", \"White Ice\"],\r\n  [\"DE3163\", \"Cerise Red\"],\r\n  [\"DE6360\", \"Roman\"],\r\n  [\"DEA681\", \"Tumbleweed\"],\r\n  [\"DEBA13\", \"Gold Tips\"],\r\n  [\"DEC196\", \"Brandy\"],\r\n  [\"DECBC6\", \"Wafer\"],\r\n  [\"DED4A4\", \"Sapling\"],\r\n  [\"DED717\", \"Barberry\"],\r\n  [\"DEE5C0\", \"Beryl Green\"],\r\n  [\"DEF5FF\", \"Pattens Blue\"],\r\n  [\"DF73FF\", \"Heliotrope\"],\r\n  [\"DFBE6F\", \"Apache\"],\r\n  [\"DFCD6F\", \"Chenin\"],\r\n  [\"DFCFDB\", \"Lola\"],\r\n  [\"DFECDA\", \"Willow Brook\"],\r\n  [\"DFFF00\", \"Chartreuse Yellow\"],\r\n  [\"E0B0FF\", \"Mauve\"],\r\n  [\"E0B646\", \"Anzac\"],\r\n  [\"E0B974\", \"Harvest Gold\"],\r\n  [\"E0C095\", \"Calico\"],\r\n  [\"E0FFFF\", \"Baby Blue\"],\r\n  [\"E16865\", \"Sunglo\"],\r\n  [\"E1BC64\", \"Equator\"],\r\n  [\"E1C0C8\", \"Pink Flare\"],\r\n  [\"E1E6D6\", \"Periglacial Blue\"],\r\n  [\"E1EAD4\", \"Kidnapper\"],\r\n  [\"E1F6E8\", \"Tara\"],\r\n  [\"E25465\", \"Mandy\"],\r\n  [\"E2725B\", \"Terracotta\"],\r\n  [\"E28913\", \"Golden Bell\"],\r\n  [\"E292C0\", \"Shocking\"],\r\n  [\"E29418\", \"Dixie\"],\r\n  [\"E29CD2\", \"Light Orchid\"],\r\n  [\"E2D8ED\", \"Snuff\"],\r\n  [\"E2EBED\", \"Mystic\"],\r\n  [\"E2F3EC\", \"Apple Green\"],\r\n  [\"E30B5C\", \"Razzmatazz\"],\r\n  [\"E32636\", \"Alizarin Crimson\"],\r\n  [\"E34234\", \"Cinnabar\"],\r\n  [\"E3BEBE\", \"Cavern Pink\"],\r\n  [\"E3F5E1\", \"Peppermint\"],\r\n  [\"E3F988\", \"Mindaro\"],\r\n  [\"E47698\", \"Deep Blush\"],\r\n  [\"E49B0F\", \"Gamboge\"],\r\n  [\"E4C2D5\", \"Melanie\"],\r\n  [\"E4CFDE\", \"Twilight\"],\r\n  [\"E4D1C0\", \"Bone\"],\r\n  [\"E4D422\", \"Sunflower\"],\r\n  [\"E4D5B7\", \"Grain Brown\"],\r\n  [\"E4D69B\", \"Zombie\"],\r\n  [\"E4F6E7\", \"Frostee\"],\r\n  [\"E4FFD1\", \"Snow Flurry\"],\r\n  [\"E52B50\", \"Amaranth\"],\r\n  [\"E5841B\", \"Zest\"],\r\n  [\"E5CCC9\", \"Dust Storm\"],\r\n  [\"E5D7BD\", \"Stark White\"],\r\n  [\"E5D8AF\", \"Hampton\"],\r\n  [\"E5E0E1\", \"Bon Jour\"],\r\n  [\"E5E5E5\", \"Mercury\"],\r\n  [\"E5F9F6\", \"Polar\"],\r\n  [\"E64E03\", \"Trinidad\"],\r\n  [\"E6BE8A\", \"Gold Sand\"],\r\n  [\"E6BEA5\", \"Cashmere\"],\r\n  [\"E6D7B9\", \"Double Spanish White\"],\r\n  [\"E6E4D4\", \"Satin Linen\"],\r\n  [\"E6F2EA\", \"Harp\"],\r\n  [\"E6F8F3\", \"Off Green\"],\r\n  [\"E6FFE9\", \"Hint of Green\"],\r\n  [\"E6FFFF\", \"Tranquil\"],\r\n  [\"E77200\", \"Mango Tango\"],\r\n  [\"E7730A\", \"Christine\"],\r\n  [\"E79F8C\", \"Tonys Pink\"],\r\n  [\"E79FC4\", \"Kobi\"],\r\n  [\"E7BCB4\", \"Rose Fog\"],\r\n  [\"E7BF05\", \"Corn\"],\r\n  [\"E7CD8C\", \"Putty\"],\r\n  [\"E7ECE6\", \"Gray Nurse\"],\r\n  [\"E7F8FF\", \"Lily White\"],\r\n  [\"E7FEFF\", \"Bubbles\"],\r\n  [\"E89928\", \"Fire Bush\"],\r\n  [\"E8B9B3\", \"Shilo\"],\r\n  [\"E8E0D5\", \"Pearl Bush\"],\r\n  [\"E8EBE0\", \"Green White\"],\r\n  [\"E8F1D4\", \"Chrome White\"],\r\n  [\"E8F2EB\", \"Gin\"],\r\n  [\"E8F5F2\", \"Aqua Squeeze\"],\r\n  [\"E96E00\", \"Clementine\"],\r\n  [\"E97451\", \"Burnt Sienna\"],\r\n  [\"E97C07\", \"Tahiti Gold\"],\r\n  [\"E9CECD\", \"Oyster Pink\"],\r\n  [\"E9D75A\", \"Confetti\"],\r\n  [\"E9E3E3\", \"Ebb\"],\r\n  [\"E9F8ED\", \"Ottoman\"],\r\n  [\"E9FFFD\", \"Clear Day\"],\r\n  [\"EA88A8\", \"Carissma\"],\r\n  [\"EAAE69\", \"Porsche\"],\r\n  [\"EAB33B\", \"Tulip Tree\"],\r\n  [\"EAC674\", \"Rob Roy\"],\r\n  [\"EADAB8\", \"Raffia\"],\r\n  [\"EAE8D4\", \"White Rock\"],\r\n  [\"EAF6EE\", \"Panache\"],\r\n  [\"EAF6FF\", \"Solitude\"],\r\n  [\"EAF9F5\", \"Aqua Spring\"],\r\n  [\"EAFFFE\", \"Dew\"],\r\n  [\"EB9373\", \"Apricot\"],\r\n  [\"EBC2AF\", \"Zinnwaldite\"],\r\n  [\"ECA927\", \"Fuel Yellow\"],\r\n  [\"ECC54E\", \"Ronchi\"],\r\n  [\"ECC7EE\", \"French Lilac\"],\r\n  [\"ECCDB9\", \"Just Right\"],\r\n  [\"ECE090\", \"Wild Rice\"],\r\n  [\"ECEBBD\", \"Fall Green\"],\r\n  [\"ECEBCE\", \"Aths Special\"],\r\n  [\"ECF245\", \"Starship\"],\r\n  [\"ED0A3F\", \"Red Ribbon\"],\r\n  [\"ED7A1C\", \"Tango\"],\r\n  [\"ED9121\", \"Carrot Orange\"],\r\n  [\"ED989E\", \"Sea Pink\"],\r\n  [\"EDB381\", \"Tacao\"],\r\n  [\"EDC9AF\", \"Desert Sand\"],\r\n  [\"EDCDAB\", \"Pancho\"],\r\n  [\"EDDCB1\", \"Chamois\"],\r\n  [\"EDEA99\", \"Primrose\"],\r\n  [\"EDF5DD\", \"Frost\"],\r\n  [\"EDF5F5\", \"Aqua Haze\"],\r\n  [\"EDF6FF\", \"Zumthor\"],\r\n  [\"EDF9F1\", \"Narvik\"],\r\n  [\"EDFC84\", \"Honeysuckle\"],\r\n  [\"EE82EE\", \"Lavender Magenta\"],\r\n  [\"EEC1BE\", \"Beauty Bush\"],\r\n  [\"EED794\", \"Chalky\"],\r\n  [\"EED9C4\", \"Almond\"],\r\n  [\"EEDC82\", \"Flax\"],\r\n  [\"EEDEDA\", \"Bizarre\"],\r\n  [\"EEE3AD\", \"Double Colonial White\"],\r\n  [\"EEEEE8\", \"Cararra\"],\r\n  [\"EEEF78\", \"Manz\"],\r\n  [\"EEF0C8\", \"Tahuna Sands\"],\r\n  [\"EEF0F3\", \"Athens Gray\"],\r\n  [\"EEF3C3\", \"Tusk\"],\r\n  [\"EEF4DE\", \"Loafer\"],\r\n  [\"EEF6F7\", \"Catskill White\"],\r\n  [\"EEFDFF\", \"Twilight Blue\"],\r\n  [\"EEFF9A\", \"Jonquil\"],\r\n  [\"EEFFE2\", \"Rice Flower\"],\r\n  [\"EF863F\", \"Jaffa\"],\r\n  [\"EFEFEF\", \"Gallery\"],\r\n  [\"EFF2F3\", \"Porcelain\"],\r\n  [\"F091A9\", \"Mauvelous\"],\r\n  [\"F0D52D\", \"Golden Dream\"],\r\n  [\"F0DB7D\", \"Golden Sand\"],\r\n  [\"F0DC82\", \"Buff\"],\r\n  [\"F0E2EC\", \"Prim\"],\r\n  [\"F0E68C\", \"Khaki\"],\r\n  [\"F0EEFD\", \"Selago\"],\r\n  [\"F0EEFF\", \"Titan White\"],\r\n  [\"F0F8FF\", \"Alice Blue\"],\r\n  [\"F0FCEA\", \"Feta\"],\r\n  [\"F18200\", \"Gold Drop\"],\r\n  [\"F19BAB\", \"Wewak\"],\r\n  [\"F1E788\", \"Sahara Sand\"],\r\n  [\"F1E9D2\", \"Parchment\"],\r\n  [\"F1E9FF\", \"Blue Chalk\"],\r\n  [\"F1EEC1\", \"Mint Julep\"],\r\n  [\"F1F1F1\", \"Seashell\"],\r\n  [\"F1F7F2\", \"Saltpan\"],\r\n  [\"F1FFAD\", \"Tidal\"],\r\n  [\"F1FFC8\", \"Chiffon\"],\r\n  [\"F2552A\", \"Flamingo\"],\r\n  [\"F28500\", \"Tangerine\"],\r\n  [\"F2C3B2\", \"Mandys Pink\"],\r\n  [\"F2F2F2\", \"Concrete\"],\r\n  [\"F2FAFA\", \"Black Squeeze\"],\r\n  [\"F34723\", \"Pomegranate\"],\r\n  [\"F3AD16\", \"Buttercup\"],\r\n  [\"F3D69D\", \"New Orleans\"],\r\n  [\"F3D9DF\", \"Vanilla Ice\"],\r\n  [\"F3E7BB\", \"Sidecar\"],\r\n  [\"F3E9E5\", \"Dawn Pink\"],\r\n  [\"F3EDCF\", \"Wheatfield\"],\r\n  [\"F3FB62\", \"Canary\"],\r\n  [\"F3FBD4\", \"Orinoco\"],\r\n  [\"F3FFD8\", \"Carla\"],\r\n  [\"F400A1\", \"Hollywood Cerise\"],\r\n  [\"F4A460\", \"Sandy brown\"],\r\n  [\"F4C430\", \"Saffron\"],\r\n  [\"F4D81C\", \"Ripe Lemon\"],\r\n  [\"F4EBD3\", \"Janna\"],\r\n  [\"F4F2EE\", \"Pampas\"],\r\n  [\"F4F4F4\", \"Wild Sand\"],\r\n  [\"F4F8FF\", \"Zircon\"],\r\n  [\"F57584\", \"Froly\"],\r\n  [\"F5C85C\", \"Cream Can\"],\r\n  [\"F5C999\", \"Manhattan\"],\r\n  [\"F5D5A0\", \"Maize\"],\r\n  [\"F5DEB3\", \"Wheat\"],\r\n  [\"F5E7A2\", \"Sandwisp\"],\r\n  [\"F5E7E2\", \"Pot Pourri\"],\r\n  [\"F5E9D3\", \"Albescent White\"],\r\n  [\"F5EDEF\", \"Soft Peach\"],\r\n  [\"F5F3E5\", \"Ecru White\"],\r\n  [\"F5F5DC\", \"Beige\"],\r\n  [\"F5FB3D\", \"Golden Fizz\"],\r\n  [\"F5FFBE\", \"Australian Mint\"],\r\n  [\"F64A8A\", \"French Rose\"],\r\n  [\"F653A6\", \"Brilliant Rose\"],\r\n  [\"F6A4C9\", \"Illusion\"],\r\n  [\"F6F0E6\", \"Merino\"],\r\n  [\"F6F7F7\", \"Black Haze\"],\r\n  [\"F6FFDC\", \"Spring Sun\"],\r\n  [\"F7468A\", \"Violet Red\"],\r\n  [\"F77703\", \"Chilean Fire\"],\r\n  [\"F77FBE\", \"Persian Pink\"],\r\n  [\"F7B668\", \"Rajah\"],\r\n  [\"F7C8DA\", \"Azalea\"],\r\n  [\"F7DBE6\", \"We Peep\"],\r\n  [\"F7F2E1\", \"Quarter Spanish White\"],\r\n  [\"F7F5FA\", \"Whisper\"],\r\n  [\"F7FAF7\", \"Snow Drift\"],\r\n  [\"F8B853\", \"Casablanca\"],\r\n  [\"F8C3DF\", \"Chantilly\"],\r\n  [\"F8D9E9\", \"Cherub\"],\r\n  [\"F8DB9D\", \"Marzipan\"],\r\n  [\"F8DD5C\", \"Energy Yellow\"],\r\n  [\"F8E4BF\", \"Givry\"],\r\n  [\"F8F0E8\", \"White Linen\"],\r\n  [\"F8F4FF\", \"Magnolia\"],\r\n  [\"F8F6F1\", \"Spring Wood\"],\r\n  [\"F8F7DC\", \"Coconut Cream\"],\r\n  [\"F8F7FC\", \"White Lilac\"],\r\n  [\"F8F8F7\", \"Desert Storm\"],\r\n  [\"F8F99C\", \"Texas\"],\r\n  [\"F8FACD\", \"Corn Field\"],\r\n  [\"F8FDD3\", \"Mimosa\"],\r\n  [\"F95A61\", \"Carnation\"],\r\n  [\"F9BF58\", \"Saffron Mango\"],\r\n  [\"F9E0ED\", \"Carousel Pink\"],\r\n  [\"F9E4BC\", \"Dairy Cream\"],\r\n  [\"F9E663\", \"Portica\"],\r\n  [\"F9EAF3\", \"Amour\"],\r\n  [\"F9F8E4\", \"Rum Swizzle\"],\r\n  [\"F9FF8B\", \"Dolly\"],\r\n  [\"F9FFF6\", \"Sugar Cane\"],\r\n  [\"FA7814\", \"Ecstasy\"],\r\n  [\"FA9D5A\", \"Tan Hide\"],\r\n  [\"FAD3A2\", \"Corvette\"],\r\n  [\"FADFAD\", \"Peach Yellow\"],\r\n  [\"FAE600\", \"Turbo\"],\r\n  [\"FAEAB9\", \"Astra\"],\r\n  [\"FAECCC\", \"Champagne\"],\r\n  [\"FAF0E6\", \"Linen\"],\r\n  [\"FAF3F0\", \"Fantasy\"],\r\n  [\"FAF7D6\", \"Citrine White\"],\r\n  [\"FAFAFA\", \"Alabaster\"],\r\n  [\"FAFDE4\", \"Hint of Yellow\"],\r\n  [\"FAFFA4\", \"Milan\"],\r\n  [\"FB607F\", \"Brink Pink\"],\r\n  [\"FB8989\", \"Geraldine\"],\r\n  [\"FBA0E3\", \"Lavender Rose\"],\r\n  [\"FBA129\", \"Sea Buckthorn\"],\r\n  [\"FBAC13\", \"Sun\"],\r\n  [\"FBAED2\", \"Lavender Pink\"],\r\n  [\"FBB2A3\", \"Rose Bud\"],\r\n  [\"FBBEDA\", \"Cupid\"],\r\n  [\"FBCCE7\", \"Classic Rose\"],\r\n  [\"FBCEB1\", \"Apricot Peach\"],\r\n  [\"FBE7B2\", \"Banana Mania\"],\r\n  [\"FBE870\", \"Marigold Yellow\"],\r\n  [\"FBE96C\", \"Festival\"],\r\n  [\"FBEA8C\", \"Sweet Corn\"],\r\n  [\"FBEC5D\", \"Candy Corn\"],\r\n  [\"FBF9F9\", \"Hint of Red\"],\r\n  [\"FBFFBA\", \"Shalimar\"],\r\n  [\"FC0FC0\", \"Shocking Pink\"],\r\n  [\"FC80A5\", \"Tickle Me Pink\"],\r\n  [\"FC9C1D\", \"Tree Poppy\"],\r\n  [\"FCC01E\", \"Lightning Yellow\"],\r\n  [\"FCD667\", \"Goldenrod\"],\r\n  [\"FCD917\", \"Candlelight\"],\r\n  [\"FCDA98\", \"Cherokee\"],\r\n  [\"FCF4D0\", \"Double Pearl Lusta\"],\r\n  [\"FCF4DC\", \"Pearl Lusta\"],\r\n  [\"FCF8F7\", \"Vista White\"],\r\n  [\"FCFBF3\", \"Bianca\"],\r\n  [\"FCFEDA\", \"Moon Glow\"],\r\n  [\"FCFFE7\", \"China Ivory\"],\r\n  [\"FCFFF9\", \"Ceramic\"],\r\n  [\"FD0E35\", \"Torch Red\"],\r\n  [\"FD5B78\", \"Wild Watermelon\"],\r\n  [\"FD7B33\", \"Crusta\"],\r\n  [\"FD7C07\", \"Sorbus\"],\r\n  [\"FD9FA2\", \"Sweet Pink\"],\r\n  [\"FDD5B1\", \"Light Apricot\"],\r\n  [\"FDD7E4\", \"Pig Pink\"],\r\n  [\"FDE1DC\", \"Cinderella\"],\r\n  [\"FDE295\", \"Golden Glow\"],\r\n  [\"FDE910\", \"Lemon\"],\r\n  [\"FDF5E6\", \"Old Lace\"],\r\n  [\"FDF6D3\", \"Half Colonial White\"],\r\n  [\"FDF7AD\", \"Drover\"],\r\n  [\"FDFEB8\", \"Pale Prim\"],\r\n  [\"FDFFD5\", \"Cumulus\"],\r\n  [\"FE28A2\", \"Persian Rose\"],\r\n  [\"FE4C40\", \"Sunset Orange\"],\r\n  [\"FE6F5E\", \"Bittersweet\"],\r\n  [\"FE9D04\", \"California\"],\r\n  [\"FEA904\", \"Yellow Sea\"],\r\n  [\"FEBAAD\", \"Melon\"],\r\n  [\"FED33C\", \"Bright Sun\"],\r\n  [\"FED85D\", \"Dandelion\"],\r\n  [\"FEDB8D\", \"Salomie\"],\r\n  [\"FEE5AC\", \"Cape Honey\"],\r\n  [\"FEEBF3\", \"Remy\"],\r\n  [\"FEEFCE\", \"Oasis\"],\r\n  [\"FEF0EC\", \"Bridesmaid\"],\r\n  [\"FEF2C7\", \"Beeswax\"],\r\n  [\"FEF3D8\", \"Bleach White\"],\r\n  [\"FEF4CC\", \"Pipi\"],\r\n  [\"FEF4DB\", \"Half Spanish White\"],\r\n  [\"FEF4F8\", \"Wisp Pink\"],\r\n  [\"FEF5F1\", \"Provincial Pink\"],\r\n  [\"FEF7DE\", \"Half Dutch White\"],\r\n  [\"FEF8E2\", \"Solitaire\"],\r\n  [\"FEF8FF\", \"White Pointer\"],\r\n  [\"FEF9E3\", \"Off Yellow\"],\r\n  [\"FEFCED\", \"Orange White\"],\r\n  [\"FF0000\", \"Red\"],\r\n  [\"FF007F\", \"Rose\"],\r\n  [\"FF00CC\", \"Purple Pizzazz\"],\r\n  [\"FF00FF\", \"Magenta / Fuchsia\"],\r\n  [\"FF2400\", \"Scarlet\"],\r\n  [\"FF3399\", \"Wild Strawberry\"],\r\n  [\"FF33CC\", \"Razzle Dazzle Rose\"],\r\n  [\"FF355E\", \"Radical Red\"],\r\n  [\"FF3F34\", \"Red Orange\"],\r\n  [\"FF4040\", \"Coral Red\"],\r\n  [\"FF4D00\", \"Vermilion\"],\r\n  [\"FF4F00\", \"International Orange\"],\r\n  [\"FF6037\", \"Outrageous Orange\"],\r\n  [\"FF6600\", \"Blaze Orange\"],\r\n  [\"FF66FF\", \"Pink Flamingo\"],\r\n  [\"FF681F\", \"Orange\"],\r\n  [\"FF69B4\", \"Hot Pink\"],\r\n  [\"FF6B53\", \"Persimmon\"],\r\n  [\"FF6FFF\", \"Blush Pink\"],\r\n  [\"FF7034\", \"Burning Orange\"],\r\n  [\"FF7518\", \"Pumpkin\"],\r\n  [\"FF7D07\", \"Flamenco\"],\r\n  [\"FF7F00\", \"Flush Orange\"],\r\n  [\"FF7F50\", \"Coral\"],\r\n  [\"FF8C69\", \"Salmon\"],\r\n  [\"FF9000\", \"Pizazz\"],\r\n  [\"FF910F\", \"West Side\"],\r\n  [\"FF91A4\", \"Pink Salmon\"],\r\n  [\"FF9933\", \"Neon Carrot\"],\r\n  [\"FF9966\", \"Atomic Tangerine\"],\r\n  [\"FF9980\", \"Vivid Tangerine\"],\r\n  [\"FF9E2C\", \"Sunshade\"],\r\n  [\"FFA000\", \"Orange Peel\"],\r\n  [\"FFA194\", \"Mona Lisa\"],\r\n  [\"FFA500\", \"Web Orange\"],\r\n  [\"FFA6C9\", \"Carnation Pink\"],\r\n  [\"FFAB81\", \"Hit Pink\"],\r\n  [\"FFAE42\", \"Yellow Orange\"],\r\n  [\"FFB0AC\", \"Cornflower Lilac\"],\r\n  [\"FFB1B3\", \"Sundown\"],\r\n  [\"FFB31F\", \"My Sin\"],\r\n  [\"FFB555\", \"Texas Rose\"],\r\n  [\"FFB7D5\", \"Cotton Candy\"],\r\n  [\"FFB97B\", \"Macaroni and Cheese\"],\r\n  [\"FFBA00\", \"Selective Yellow\"],\r\n  [\"FFBD5F\", \"Koromiko\"],\r\n  [\"FFBF00\", \"Amber\"],\r\n  [\"FFC0A8\", \"Wax Flower\"],\r\n  [\"FFC0CB\", \"Pink\"],\r\n  [\"FFC3C0\", \"Your Pink\"],\r\n  [\"FFC901\", \"Supernova\"],\r\n  [\"FFCBA4\", \"Flesh\"],\r\n  [\"FFCC33\", \"Sunglow\"],\r\n  [\"FFCC5C\", \"Golden Tainoi\"],\r\n  [\"FFCC99\", \"Peach Orange\"],\r\n  [\"FFCD8C\", \"Chardonnay\"],\r\n  [\"FFD1DC\", \"Pastel Pink\"],\r\n  [\"FFD2B7\", \"Romantic\"],\r\n  [\"FFD38C\", \"Grandis\"],\r\n  [\"FFD700\", \"Gold\"],\r\n  [\"FFD800\", \"School bus Yellow\"],\r\n  [\"FFD8D9\", \"Cosmos\"],\r\n  [\"FFDB58\", \"Mustard\"],\r\n  [\"FFDCD6\", \"Peach Schnapps\"],\r\n  [\"FFDDAF\", \"Caramel\"],\r\n  [\"FFDDCD\", \"Tuft Bush\"],\r\n  [\"FFDDCF\", \"Watusi\"],\r\n  [\"FFDDF4\", \"Pink Lace\"],\r\n  [\"FFDEAD\", \"Navajo White\"],\r\n  [\"FFDEB3\", \"Frangipani\"],\r\n  [\"FFE1DF\", \"Pippin\"],\r\n  [\"FFE1F2\", \"Pale Rose\"],\r\n  [\"FFE2C5\", \"Negroni\"],\r\n  [\"FFE5A0\", \"Cream Brulee\"],\r\n  [\"FFE5B4\", \"Peach\"],\r\n  [\"FFE6C7\", \"Tequila\"],\r\n  [\"FFE772\", \"Kournikova\"],\r\n  [\"FFEAC8\", \"Sandy Beach\"],\r\n  [\"FFEAD4\", \"Karry\"],\r\n  [\"FFEC13\", \"Broom\"],\r\n  [\"FFEDBC\", \"Colonial White\"],\r\n  [\"FFEED8\", \"Derby\"],\r\n  [\"FFEFA1\", \"Vis Vis\"],\r\n  [\"FFEFC1\", \"Egg White\"],\r\n  [\"FFEFD5\", \"Papaya Whip\"],\r\n  [\"FFEFEC\", \"Fair Pink\"],\r\n  [\"FFF0DB\", \"Peach Cream\"],\r\n  [\"FFF0F5\", \"Lavender blush\"],\r\n  [\"FFF14F\", \"Gorse\"],\r\n  [\"FFF1B5\", \"Buttermilk\"],\r\n  [\"FFF1D8\", \"Pink Lady\"],\r\n  [\"FFF1EE\", \"Forget Me Not\"],\r\n  [\"FFF1F9\", \"Tutu\"],\r\n  [\"FFF39D\", \"Picasso\"],\r\n  [\"FFF3F1\", \"Chardon\"],\r\n  [\"FFF46E\", \"Paris Daisy\"],\r\n  [\"FFF4CE\", \"Barley White\"],\r\n  [\"FFF4DD\", \"Egg Sour\"],\r\n  [\"FFF4E0\", \"Sazerac\"],\r\n  [\"FFF4E8\", \"Serenade\"],\r\n  [\"FFF4F3\", \"Chablis\"],\r\n  [\"FFF5EE\", \"Seashell Peach\"],\r\n  [\"FFF5F3\", \"Sauvignon\"],\r\n  [\"FFF6D4\", \"Milk Punch\"],\r\n  [\"FFF6DF\", \"letden\"],\r\n  [\"FFF6F5\", \"Rose White\"],\r\n  [\"FFF8D1\", \"Baja White\"],\r\n  [\"FFF9E2\", \"Gin Fizz\"],\r\n  [\"FFF9E6\", \"Early Dawn\"],\r\n  [\"FFFACD\", \"Lemon Chiffon\"],\r\n  [\"FFFAF4\", \"Bridal Heath\"],\r\n  [\"FFFBDC\", \"Scotch Mist\"],\r\n  [\"FFFBF9\", \"Soapstone\"],\r\n  [\"FFFC99\", \"Witch Haze\"],\r\n  [\"FFFCEA\", \"Buttery White\"],\r\n  [\"FFFCEE\", \"Island Spice\"],\r\n  [\"FFFDD0\", \"Cream\"],\r\n  [\"FFFDE6\", \"Chilean Heath\"],\r\n  [\"FFFDE8\", \"Travertine\"],\r\n  [\"FFFDF3\", \"Orchid White\"],\r\n  [\"FFFDF4\", \"Quarter Pearl Lusta\"],\r\n  [\"FFFEE1\", \"Half and Half\"],\r\n  [\"FFFEEC\", \"Apricot White\"],\r\n  [\"FFFEF0\", \"Rice Cake\"],\r\n  [\"FFFEF6\", \"Black White\"],\r\n  [\"FFFEFD\", \"Romance\"],\r\n  [\"FFFF00\", \"Yellow\"],\r\n  [\"FFFF66\", \"Laser Lemon\"],\r\n  [\"FFFF99\", \"Pale Canary\"],\r\n  [\"FFFFB4\", \"Portafino\"],\r\n  [\"FFFFF0\", \"Ivory\"],\r\n  [\"FFFFFF\", \"White\"]\r\n  ]\r\n  \r\n  }\r\n\n\n//# sourceURL=webpack://colorant/./src/js/modules/ntc.js?");

/***/ }),

/***/ "./src/js/modules/tinyColor.js":
/*!*************************************!*\
  !*** ./src/js/modules/tinyColor.js ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* module decorator */ module = __webpack_require__.hmd(module);\n// TinyColor v1.4.2\r\n// https://github.com/bgrins/TinyColor\r\n// Brian Grinstead, MIT License\r\n\r\n(function(Math) {\r\n\r\n    var trimLeft = /^\\s+/,\r\n        trimRight = /\\s+$/,\r\n        mathRound = Math.round,\r\n        mathMin = Math.min,\r\n        mathMax = Math.max,\r\n        mathRandom = Math.random;\r\n    \r\n    function tinycolor (color, opts) {\r\n    \r\n        color = (color) ? color : '';\r\n        opts = opts || { };\r\n    \r\n        // If input is already a tinycolor, return itself\r\n        if (color instanceof tinycolor) {\r\n           return color;\r\n        }\r\n        // If we are called as a function, call using new instead\r\n        if (!(this instanceof tinycolor)) {\r\n            return new tinycolor(color, opts);\r\n        }\r\n    \r\n        var rgb = inputToRGB(color);\r\n        this._originalInput = color,\r\n        this._r = rgb.r,\r\n        this._g = rgb.g,\r\n        this._b = rgb.b,\r\n        this._a = rgb.a,\r\n        this._roundA = mathRound(100*this._a) / 100,\r\n        this._format = opts.format || rgb.format;\r\n        this._gradientType = opts.gradientType;\r\n    \r\n        // Don't let the range of [0,255] come back in [0,1].\r\n        // Potentially lose a little bit of precision here, but will fix issues where\r\n        // .5 gets interpreted as half of the total, instead of half of 1\r\n        // If it was supposed to be 128, this was already taken care of by `inputToRgb`\r\n        if (this._r < 1) { this._r = mathRound(this._r); }\r\n        if (this._g < 1) { this._g = mathRound(this._g); }\r\n        if (this._b < 1) { this._b = mathRound(this._b); }\r\n    \r\n        this._ok = rgb.ok;\r\n    }\r\n    \r\n    tinycolor.prototype = {\r\n        isDark: function() {\r\n            return this.getBrightness() < 128;\r\n        },\r\n        isLight: function() {\r\n            return !this.isDark();\r\n        },\r\n        isValid: function() {\r\n            return this._ok;\r\n        },\r\n        getOriginalInput: function() {\r\n          return this._originalInput;\r\n        },\r\n        getFormat: function() {\r\n            return this._format;\r\n        },\r\n        getAlpha: function() {\r\n            return this._a;\r\n        },\r\n        getBrightness: function() {\r\n            //http://www.w3.org/TR/AERT#color-contrast\r\n            var rgb = this.toRgb();\r\n            return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\r\n        },\r\n        getLuminance: function() {\r\n            //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\r\n            var rgb = this.toRgb();\r\n            var RsRGB, GsRGB, BsRGB, R, G, B;\r\n            RsRGB = rgb.r/255;\r\n            GsRGB = rgb.g/255;\r\n            BsRGB = rgb.b/255;\r\n    \r\n            if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\r\n            if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\r\n            if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\r\n            return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\r\n        },\r\n        setAlpha: function(value) {\r\n            this._a = boundAlpha(value);\r\n            this._roundA = mathRound(100*this._a) / 100;\r\n            return this;\r\n        },\r\n        toHsv: function() {\r\n            var hsv = rgbToHsv(this._r, this._g, this._b);\r\n            return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\r\n        },\r\n        toHsvString: function() {\r\n            var hsv = rgbToHsv(this._r, this._g, this._b);\r\n            var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\r\n            return (this._a == 1) ?\r\n              \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\r\n              \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\r\n        },\r\n        toHsl: function() {\r\n            var hsl = rgbToHsl(this._r, this._g, this._b);\r\n            return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\r\n        },\r\n        toHslString: function() {\r\n            var hsl = rgbToHsl(this._r, this._g, this._b);\r\n            var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\r\n            return (this._a == 1) ?\r\n              \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\r\n              \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\r\n        },\r\n        toHex: function(allow3Char) {\r\n            return rgbToHex(this._r, this._g, this._b, allow3Char);\r\n        },\r\n        toHexString: function(allow3Char) {\r\n            return '#' + this.toHex(allow3Char);\r\n        },\r\n        toHex8: function(allow4Char) {\r\n            return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\r\n        },\r\n        toHex8String: function(allow4Char) {\r\n            return '#' + this.toHex8(allow4Char);\r\n        },\r\n        toRgb: function() {\r\n            return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\r\n        },\r\n        toRgbString: function() {\r\n            return (this._a == 1) ?\r\n              \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\r\n              \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\r\n        },\r\n        toPercentageRgb: function() {\r\n            return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\r\n        },\r\n        toPercentageRgbString: function() {\r\n            return (this._a == 1) ?\r\n              \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\r\n              \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\r\n        },\r\n        toName: function() {\r\n            if (this._a === 0) {\r\n                return \"transparent\";\r\n            }\r\n    \r\n            if (this._a < 1) {\r\n                return false;\r\n            }\r\n    \r\n            return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\r\n        },\r\n        toFilter: function(secondColor) {\r\n            var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\r\n            var secondHex8String = hex8String;\r\n            var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\r\n    \r\n            if (secondColor) {\r\n                var s = tinycolor(secondColor);\r\n                secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\r\n            }\r\n    \r\n            return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\r\n        },\r\n        toString: function(format) {\r\n            var formatSet = !!format;\r\n            format = format || this._format;\r\n    \r\n            var formattedString = false;\r\n            var hasAlpha = this._a < 1 && this._a >= 0;\r\n            var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\r\n    \r\n            if (needsAlphaFormat) {\r\n                // Special case for \"transparent\", all other non-alpha formats\r\n                // will return rgba when there is transparency.\r\n                if (format === \"name\" && this._a === 0) {\r\n                    return this.toName();\r\n                }\r\n                return this.toRgbString();\r\n            }\r\n            if (format === \"rgb\") {\r\n                formattedString = this.toRgbString();\r\n            }\r\n            if (format === \"prgb\") {\r\n                formattedString = this.toPercentageRgbString();\r\n            }\r\n            if (format === \"hex\" || format === \"hex6\") {\r\n                formattedString = this.toHexString();\r\n            }\r\n            if (format === \"hex3\") {\r\n                formattedString = this.toHexString(true);\r\n            }\r\n            if (format === \"hex4\") {\r\n                formattedString = this.toHex8String(true);\r\n            }\r\n            if (format === \"hex8\") {\r\n                formattedString = this.toHex8String();\r\n            }\r\n            if (format === \"name\") {\r\n                formattedString = this.toName();\r\n            }\r\n            if (format === \"hsl\") {\r\n                formattedString = this.toHslString();\r\n            }\r\n            if (format === \"hsv\") {\r\n                formattedString = this.toHsvString();\r\n            }\r\n    \r\n            return formattedString || this.toHexString();\r\n        },\r\n        clone: function() {\r\n            return tinycolor(this.toString());\r\n        },\r\n    \r\n        _applyModification: function(fn, args) {\r\n            var color = fn.apply(null, [this].concat([].slice.call(args)));\r\n            this._r = color._r;\r\n            this._g = color._g;\r\n            this._b = color._b;\r\n            this.setAlpha(color._a);\r\n            return this;\r\n        },\r\n        lighten: function() {\r\n            return this._applyModification(lighten, arguments);\r\n        },\r\n        brighten: function() {\r\n            return this._applyModification(brighten, arguments);\r\n        },\r\n        darken: function() {\r\n            return this._applyModification(darken, arguments);\r\n        },\r\n        desaturate: function() {\r\n            return this._applyModification(desaturate, arguments);\r\n        },\r\n        saturate: function() {\r\n            return this._applyModification(saturate, arguments);\r\n        },\r\n        greyscale: function() {\r\n            return this._applyModification(greyscale, arguments);\r\n        },\r\n        spin: function() {\r\n            return this._applyModification(spin, arguments);\r\n        },\r\n    \r\n        _applyCombination: function(fn, args) {\r\n            return fn.apply(null, [this].concat([].slice.call(args)));\r\n        },\r\n        analogous: function() {\r\n            return this._applyCombination(analogous, arguments);\r\n        },\r\n        complement: function() {\r\n            return this._applyCombination(complement, arguments);\r\n        },\r\n        monochromatic: function() {\r\n            return this._applyCombination(monochromatic, arguments);\r\n        },\r\n        splitcomplement: function() {\r\n            return this._applyCombination(splitcomplement, arguments);\r\n        },\r\n        triad: function() {\r\n            return this._applyCombination(triad, arguments);\r\n        },\r\n        tetrad: function() {\r\n            return this._applyCombination(tetrad, arguments);\r\n        }\r\n    };\r\n    \r\n    // If input is an object, force 1 into \"1.0\" to handle ratios properly\r\n    // String input requires \"1.0\" as input, so 1 will be treated as 1\r\n    tinycolor.fromRatio = function(color, opts) {\r\n        if (typeof color == \"object\") {\r\n            var newColor = {};\r\n            for (var i in color) {\r\n                if (color.hasOwnProperty(i)) {\r\n                    if (i === \"a\") {\r\n                        newColor[i] = color[i];\r\n                    }\r\n                    else {\r\n                        newColor[i] = convertToPercentage(color[i]);\r\n                    }\r\n                }\r\n            }\r\n            color = newColor;\r\n        }\r\n    \r\n        return tinycolor(color, opts);\r\n    };\r\n    \r\n    // Given a string or object, convert that input to RGB\r\n    // Possible string inputs:\r\n    //\r\n    //     \"red\"\r\n    //     \"#f00\" or \"f00\"\r\n    //     \"#ff0000\" or \"ff0000\"\r\n    //     \"#ff000000\" or \"ff000000\"\r\n    //     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\r\n    //     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\r\n    //     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\r\n    //     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\r\n    //     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\r\n    //     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\r\n    //     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\r\n    //\r\n    function inputToRGB(color) {\r\n    \r\n        var rgb = { r: 0, g: 0, b: 0 };\r\n        var a = 1;\r\n        var s = null;\r\n        var v = null;\r\n        var l = null;\r\n        var ok = false;\r\n        var format = false;\r\n    \r\n        if (typeof color == \"string\") {\r\n            color = stringInputToObject(color);\r\n        }\r\n    \r\n        if (typeof color == \"object\") {\r\n            if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\r\n                rgb = rgbToRgb(color.r, color.g, color.b);\r\n                ok = true;\r\n                format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\r\n            }\r\n            else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\r\n                s = convertToPercentage(color.s);\r\n                v = convertToPercentage(color.v);\r\n                rgb = hsvToRgb(color.h, s, v);\r\n                ok = true;\r\n                format = \"hsv\";\r\n            }\r\n            else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\r\n                s = convertToPercentage(color.s);\r\n                l = convertToPercentage(color.l);\r\n                rgb = hslToRgb(color.h, s, l);\r\n                ok = true;\r\n                format = \"hsl\";\r\n            }\r\n    \r\n            if (color.hasOwnProperty(\"a\")) {\r\n                a = color.a;\r\n            }\r\n        }\r\n    \r\n        a = boundAlpha(a);\r\n    \r\n        return {\r\n            ok: ok,\r\n            format: color.format || format,\r\n            r: mathMin(255, mathMax(rgb.r, 0)),\r\n            g: mathMin(255, mathMax(rgb.g, 0)),\r\n            b: mathMin(255, mathMax(rgb.b, 0)),\r\n            a: a\r\n        };\r\n    }\r\n    \r\n    \r\n    // Conversion Functions\r\n    // --------------------\r\n    \r\n    // `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\r\n    // <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\r\n    \r\n    // `rgbToRgb`\r\n    // Handle bounds / percentage checking to conform to CSS color spec\r\n    // <http://www.w3.org/TR/css3-color/>\r\n    // *Assumes:* r, g, b in [0, 255] or [0, 1]\r\n    // *Returns:* { r, g, b } in [0, 255]\r\n    function rgbToRgb(r, g, b){\r\n        return {\r\n            r: bound01(r, 255) * 255,\r\n            g: bound01(g, 255) * 255,\r\n            b: bound01(b, 255) * 255\r\n        };\r\n    }\r\n    \r\n    // `rgbToHsl`\r\n    // Converts an RGB color value to HSL.\r\n    // *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\r\n    // *Returns:* { h, s, l } in [0,1]\r\n    function rgbToHsl(r, g, b) {\r\n    \r\n        r = bound01(r, 255);\r\n        g = bound01(g, 255);\r\n        b = bound01(b, 255);\r\n    \r\n        var max = mathMax(r, g, b), min = mathMin(r, g, b);\r\n        var h, s, l = (max + min) / 2;\r\n    \r\n        if(max == min) {\r\n            h = s = 0; // achromatic\r\n        }\r\n        else {\r\n            var d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            switch(max) {\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n    \r\n            h /= 6;\r\n        }\r\n    \r\n        return { h: h, s: s, l: l };\r\n    }\r\n    \r\n    // `hslToRgb`\r\n    // Converts an HSL color value to RGB.\r\n    // *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\r\n    // *Returns:* { r, g, b } in the set [0, 255]\r\n    function hslToRgb(h, s, l) {\r\n        var r, g, b;\r\n    \r\n        h = bound01(h, 360);\r\n        s = bound01(s, 100);\r\n        l = bound01(l, 100);\r\n    \r\n        function hue2rgb(p, q, t) {\r\n            if(t < 0) t += 1;\r\n            if(t > 1) t -= 1;\r\n            if(t < 1/6) return p + (q - p) * 6 * t;\r\n            if(t < 1/2) return q;\r\n            if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n            return p;\r\n        }\r\n    \r\n        if(s === 0) {\r\n            r = g = b = l; // achromatic\r\n        }\r\n        else {\r\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n            var p = 2 * l - q;\r\n            r = hue2rgb(p, q, h + 1/3);\r\n            g = hue2rgb(p, q, h);\r\n            b = hue2rgb(p, q, h - 1/3);\r\n        }\r\n    \r\n        return { r: r * 255, g: g * 255, b: b * 255 };\r\n    }\r\n    \r\n    // `rgbToHsv`\r\n    // Converts an RGB color value to HSV\r\n    // *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\r\n    // *Returns:* { h, s, v } in [0,1]\r\n    function rgbToHsv(r, g, b) {\r\n    \r\n        r = bound01(r, 255);\r\n        g = bound01(g, 255);\r\n        b = bound01(b, 255);\r\n    \r\n        var max = mathMax(r, g, b), min = mathMin(r, g, b);\r\n        var h, s, v = max;\r\n    \r\n        var d = max - min;\r\n        s = max === 0 ? 0 : d / max;\r\n    \r\n        if(max == min) {\r\n            h = 0; // achromatic\r\n        }\r\n        else {\r\n            switch(max) {\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n            h /= 6;\r\n        }\r\n        return { h: h, s: s, v: v };\r\n    }\r\n    \r\n    // `hsvToRgb`\r\n    // Converts an HSV color value to RGB.\r\n    // *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\r\n    // *Returns:* { r, g, b } in the set [0, 255]\r\n     function hsvToRgb(h, s, v) {\r\n    \r\n        h = bound01(h, 360) * 6;\r\n        s = bound01(s, 100);\r\n        v = bound01(v, 100);\r\n    \r\n        var i = Math.floor(h),\r\n            f = h - i,\r\n            p = v * (1 - s),\r\n            q = v * (1 - f * s),\r\n            t = v * (1 - (1 - f) * s),\r\n            mod = i % 6,\r\n            r = [v, q, p, p, t, v][mod],\r\n            g = [t, v, v, q, p, p][mod],\r\n            b = [p, p, t, v, v, q][mod];\r\n    \r\n        return { r: r * 255, g: g * 255, b: b * 255 };\r\n    }\r\n    \r\n    // `rgbToHex`\r\n    // Converts an RGB color to hex\r\n    // Assumes r, g, and b are contained in the set [0, 255]\r\n    // Returns a 3 or 6 character hex\r\n    function rgbToHex(r, g, b, allow3Char) {\r\n    \r\n        var hex = [\r\n            pad2(mathRound(r).toString(16)),\r\n            pad2(mathRound(g).toString(16)),\r\n            pad2(mathRound(b).toString(16))\r\n        ];\r\n    \r\n        // Return a 3 character hex if possible\r\n        if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\r\n            return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\r\n        }\r\n    \r\n        return hex.join(\"\");\r\n    }\r\n    \r\n    // `rgbaToHex`\r\n    // Converts an RGBA color plus alpha transparency to hex\r\n    // Assumes r, g, b are contained in the set [0, 255] and\r\n    // a in [0, 1]. Returns a 4 or 8 character rgba hex\r\n    function rgbaToHex(r, g, b, a, allow4Char) {\r\n    \r\n        var hex = [\r\n            pad2(mathRound(r).toString(16)),\r\n            pad2(mathRound(g).toString(16)),\r\n            pad2(mathRound(b).toString(16)),\r\n            pad2(convertDecimalToHex(a))\r\n        ];\r\n    \r\n        // Return a 4 character hex if possible\r\n        if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\r\n            return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\r\n        }\r\n    \r\n        return hex.join(\"\");\r\n    }\r\n    \r\n    // `rgbaToArgbHex`\r\n    // Converts an RGBA color to an ARGB Hex8 string\r\n    // Rarely used, but required for \"toFilter()\"\r\n    function rgbaToArgbHex(r, g, b, a) {\r\n    \r\n        var hex = [\r\n            pad2(convertDecimalToHex(a)),\r\n            pad2(mathRound(r).toString(16)),\r\n            pad2(mathRound(g).toString(16)),\r\n            pad2(mathRound(b).toString(16))\r\n        ];\r\n    \r\n        return hex.join(\"\");\r\n    }\r\n    \r\n    // `equals`\r\n    // Can be called with any tinycolor input\r\n    tinycolor.equals = function (color1, color2) {\r\n        if (!color1 || !color2) { return false; }\r\n        return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\r\n    };\r\n    \r\n    tinycolor.random = function() {\r\n        return tinycolor.fromRatio({\r\n            r: mathRandom(),\r\n            g: mathRandom(),\r\n            b: mathRandom()\r\n        });\r\n    };\r\n    \r\n    \r\n    // Modification Functions\r\n    // ----------------------\r\n    // Thanks to less.js for some of the basics here\r\n    // <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\r\n    \r\n    function desaturate(color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var hsl = tinycolor(color).toHsl();\r\n        hsl.s -= amount / 100;\r\n        hsl.s = clamp01(hsl.s);\r\n        return tinycolor(hsl);\r\n    }\r\n    \r\n    function saturate(color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var hsl = tinycolor(color).toHsl();\r\n        hsl.s += amount / 100;\r\n        hsl.s = clamp01(hsl.s);\r\n        return tinycolor(hsl);\r\n    }\r\n    \r\n    function greyscale(color) {\r\n        return tinycolor(color).desaturate(100);\r\n    }\r\n    \r\n    function lighten (color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var hsl = tinycolor(color).toHsl();\r\n        hsl.l += amount / 100;\r\n        hsl.l = clamp01(hsl.l);\r\n        return tinycolor(hsl);\r\n    }\r\n    \r\n    function brighten(color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var rgb = tinycolor(color).toRgb();\r\n        rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\r\n        rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\r\n        rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\r\n        return tinycolor(rgb);\r\n    }\r\n    \r\n    function darken (color, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 10);\r\n        var hsl = tinycolor(color).toHsl();\r\n        hsl.l -= amount / 100;\r\n        hsl.l = clamp01(hsl.l);\r\n        return tinycolor(hsl);\r\n    }\r\n    \r\n    // Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\r\n    // Values outside of this range will be wrapped into this range.\r\n    function spin(color, amount) {\r\n        var hsl = tinycolor(color).toHsl();\r\n        var hue = (hsl.h + amount) % 360;\r\n        hsl.h = hue < 0 ? 360 + hue : hue;\r\n        return tinycolor(hsl);\r\n    }\r\n    \r\n    // Combination Functions\r\n    // ---------------------\r\n    // Thanks to jQuery xColor for some of the ideas behind these\r\n    // <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\r\n    \r\n    function complement(color) {\r\n        var hsl = tinycolor(color).toHsl();\r\n        hsl.h = (hsl.h + 180) % 360;\r\n        return tinycolor(hsl);\r\n    }\r\n    \r\n    function triad(color) {\r\n        var hsl = tinycolor(color).toHsl();\r\n        var h = hsl.h;\r\n        return [\r\n            tinycolor(color),\r\n            tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\r\n            tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\r\n        ];\r\n    }\r\n    \r\n    function tetrad(color) {\r\n        var hsl = tinycolor(color).toHsl();\r\n        var h = hsl.h;\r\n        return [\r\n            tinycolor(color),\r\n            tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\r\n            tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\r\n            tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\r\n        ];\r\n    }\r\n    \r\n    function splitcomplement(color) {\r\n        var hsl = tinycolor(color).toHsl();\r\n        var h = hsl.h;\r\n        return [\r\n            tinycolor(color),\r\n            tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\r\n            tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\r\n        ];\r\n    }\r\n    \r\n    function analogous(color, results, slices) {\r\n        results = results || 6;\r\n        slices = slices || 30;\r\n    \r\n        var hsl = tinycolor(color).toHsl();\r\n        var part = 360 / slices;\r\n        var ret = [tinycolor(color)];\r\n    \r\n        for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\r\n            hsl.h = (hsl.h + part) % 360;\r\n            ret.push(tinycolor(hsl));\r\n        }\r\n        return ret;\r\n    }\r\n    \r\n    function monochromatic(color, results) {\r\n        results = results || 6;\r\n        var hsv = tinycolor(color).toHsv();\r\n        var h = hsv.h, s = hsv.s, v = hsv.v;\r\n        var ret = [];\r\n        var modification = 1 / results;\r\n    \r\n        while (results--) {\r\n            ret.push(tinycolor({ h: h, s: s, v: v}));\r\n            v = (v + modification) % 1;\r\n        }\r\n    \r\n        return ret;\r\n    }\r\n    \r\n    // Utility Functions\r\n    // ---------------------\r\n    \r\n    tinycolor.mix = function(color1, color2, amount) {\r\n        amount = (amount === 0) ? 0 : (amount || 50);\r\n    \r\n        var rgb1 = tinycolor(color1).toRgb();\r\n        var rgb2 = tinycolor(color2).toRgb();\r\n    \r\n        var p = amount / 100;\r\n    \r\n        var rgba = {\r\n            r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\r\n            g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\r\n            b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\r\n            a: ((rgb2.a - rgb1.a) * p) + rgb1.a\r\n        };\r\n    \r\n        return tinycolor(rgba);\r\n    };\r\n    \r\n    \r\n    // Readability Functions\r\n    // ---------------------\r\n    // <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\r\n    \r\n    // `contrast`\r\n    // Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\r\n    tinycolor.readability = function(color1, color2) {\r\n        var c1 = tinycolor(color1);\r\n        var c2 = tinycolor(color2);\r\n        return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\r\n    };\r\n    \r\n    // `isReadable`\r\n    // Ensure that foreground and background color combinations meet WCAG2 guidelines.\r\n    // The third argument is an optional Object.\r\n    //      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\r\n    //      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\r\n    // If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\r\n    \r\n    // *Example*\r\n    //    tinycolor.isReadable(\"#000\", \"#111\") => false\r\n    //    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\r\n    tinycolor.isReadable = function(color1, color2, wcag2) {\r\n        var readability = tinycolor.readability(color1, color2);\r\n        var wcag2Parms, out;\r\n    \r\n        out = false;\r\n    \r\n        wcag2Parms = validateWCAG2Parms(wcag2);\r\n        switch (wcag2Parms.level + wcag2Parms.size) {\r\n            case \"AAsmall\":\r\n            case \"AAAlarge\":\r\n                out = readability >= 4.5;\r\n                break;\r\n            case \"AAlarge\":\r\n                out = readability >= 3;\r\n                break;\r\n            case \"AAAsmall\":\r\n                out = readability >= 7;\r\n                break;\r\n        }\r\n        return out;\r\n    \r\n    };\r\n    \r\n    // `mostReadable`\r\n    // Given a base color and a list of possible foreground or background\r\n    // colors for that base, returns the most readable color.\r\n    // Optionally returns Black or White if the most readable color is unreadable.\r\n    // *Example*\r\n    //    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\r\n    //    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\r\n    //    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\r\n    //    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\r\n    tinycolor.mostReadable = function(baseColor, colorList, args) {\r\n        var bestColor = null;\r\n        var bestScore = 0;\r\n        var readability;\r\n        var includeFallbackColors, level, size ;\r\n        args = args || {};\r\n        includeFallbackColors = args.includeFallbackColors ;\r\n        level = args.level;\r\n        size = args.size;\r\n    \r\n        for (var i= 0; i < colorList.length ; i++) {\r\n            readability = tinycolor.readability(baseColor, colorList[i]);\r\n            if (readability > bestScore) {\r\n                bestScore = readability;\r\n                bestColor = tinycolor(colorList[i]);\r\n            }\r\n        }\r\n    \r\n        if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\r\n            return bestColor;\r\n        }\r\n        else {\r\n            args.includeFallbackColors=false;\r\n            return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\r\n        }\r\n    };\r\n    \r\n    \r\n    // Big List of Colors\r\n    // ------------------\r\n    // <http://www.w3.org/TR/css3-color/#svg-color>\r\n    var names = tinycolor.names = {\r\n        aliceblue: \"f0f8ff\",\r\n        antiquewhite: \"faebd7\",\r\n        aqua: \"0ff\",\r\n        aquamarine: \"7fffd4\",\r\n        azure: \"f0ffff\",\r\n        beige: \"f5f5dc\",\r\n        bisque: \"ffe4c4\",\r\n        black: \"000\",\r\n        blanchedalmond: \"ffebcd\",\r\n        blue: \"00f\",\r\n        blueviolet: \"8a2be2\",\r\n        brown: \"a52a2a\",\r\n        burlywood: \"deb887\",\r\n        burntsienna: \"ea7e5d\",\r\n        cadetblue: \"5f9ea0\",\r\n        chartreuse: \"7fff00\",\r\n        chocolate: \"d2691e\",\r\n        coral: \"ff7f50\",\r\n        cornflowerblue: \"6495ed\",\r\n        cornsilk: \"fff8dc\",\r\n        crimson: \"dc143c\",\r\n        cyan: \"0ff\",\r\n        darkblue: \"00008b\",\r\n        darkcyan: \"008b8b\",\r\n        darkgoldenrod: \"b8860b\",\r\n        darkgray: \"a9a9a9\",\r\n        darkgreen: \"006400\",\r\n        darkgrey: \"a9a9a9\",\r\n        darkkhaki: \"bdb76b\",\r\n        darkmagenta: \"8b008b\",\r\n        darkolivegreen: \"556b2f\",\r\n        darkorange: \"ff8c00\",\r\n        darkorchid: \"9932cc\",\r\n        darkred: \"8b0000\",\r\n        darksalmon: \"e9967a\",\r\n        darkseagreen: \"8fbc8f\",\r\n        darkslateblue: \"483d8b\",\r\n        darkslategray: \"2f4f4f\",\r\n        darkslategrey: \"2f4f4f\",\r\n        darkturquoise: \"00ced1\",\r\n        darkviolet: \"9400d3\",\r\n        deeppink: \"ff1493\",\r\n        deepskyblue: \"00bfff\",\r\n        dimgray: \"696969\",\r\n        dimgrey: \"696969\",\r\n        dodgerblue: \"1e90ff\",\r\n        firebrick: \"b22222\",\r\n        floralwhite: \"fffaf0\",\r\n        forestgreen: \"228b22\",\r\n        fuchsia: \"f0f\",\r\n        gainsboro: \"dcdcdc\",\r\n        ghostwhite: \"f8f8ff\",\r\n        gold: \"ffd700\",\r\n        goldenrod: \"daa520\",\r\n        gray: \"808080\",\r\n        green: \"008000\",\r\n        greenyellow: \"adff2f\",\r\n        grey: \"808080\",\r\n        honeydew: \"f0fff0\",\r\n        hotpink: \"ff69b4\",\r\n        indianred: \"cd5c5c\",\r\n        indigo: \"4b0082\",\r\n        ivory: \"fffff0\",\r\n        khaki: \"f0e68c\",\r\n        lavender: \"e6e6fa\",\r\n        lavenderblush: \"fff0f5\",\r\n        lawngreen: \"7cfc00\",\r\n        lemonchiffon: \"fffacd\",\r\n        lightblue: \"add8e6\",\r\n        lightcoral: \"f08080\",\r\n        lightcyan: \"e0ffff\",\r\n        lightgoldenrodyellow: \"fafad2\",\r\n        lightgray: \"d3d3d3\",\r\n        lightgreen: \"90ee90\",\r\n        lightgrey: \"d3d3d3\",\r\n        lightpink: \"ffb6c1\",\r\n        lightsalmon: \"ffa07a\",\r\n        lightseagreen: \"20b2aa\",\r\n        lightskyblue: \"87cefa\",\r\n        lightslategray: \"789\",\r\n        lightslategrey: \"789\",\r\n        lightsteelblue: \"b0c4de\",\r\n        lightyellow: \"ffffe0\",\r\n        lime: \"0f0\",\r\n        limegreen: \"32cd32\",\r\n        linen: \"faf0e6\",\r\n        magenta: \"f0f\",\r\n        maroon: \"800000\",\r\n        mediumaquamarine: \"66cdaa\",\r\n        mediumblue: \"0000cd\",\r\n        mediumorchid: \"ba55d3\",\r\n        mediumpurple: \"9370db\",\r\n        mediumseagreen: \"3cb371\",\r\n        mediumslateblue: \"7b68ee\",\r\n        mediumspringgreen: \"00fa9a\",\r\n        mediumturquoise: \"48d1cc\",\r\n        mediumvioletred: \"c71585\",\r\n        midnightblue: \"191970\",\r\n        mintcream: \"f5fffa\",\r\n        mistyrose: \"ffe4e1\",\r\n        moccasin: \"ffe4b5\",\r\n        navajowhite: \"ffdead\",\r\n        navy: \"000080\",\r\n        oldlace: \"fdf5e6\",\r\n        olive: \"808000\",\r\n        olivedrab: \"6b8e23\",\r\n        orange: \"ffa500\",\r\n        orangered: \"ff4500\",\r\n        orchid: \"da70d6\",\r\n        palegoldenrod: \"eee8aa\",\r\n        palegreen: \"98fb98\",\r\n        paleturquoise: \"afeeee\",\r\n        palevioletred: \"db7093\",\r\n        papayawhip: \"ffefd5\",\r\n        peachpuff: \"ffdab9\",\r\n        peru: \"cd853f\",\r\n        pink: \"ffc0cb\",\r\n        plum: \"dda0dd\",\r\n        powderblue: \"b0e0e6\",\r\n        purple: \"800080\",\r\n        rebeccapurple: \"663399\",\r\n        red: \"f00\",\r\n        rosybrown: \"bc8f8f\",\r\n        royalblue: \"4169e1\",\r\n        saddlebrown: \"8b4513\",\r\n        salmon: \"fa8072\",\r\n        sandybrown: \"f4a460\",\r\n        seagreen: \"2e8b57\",\r\n        seashell: \"fff5ee\",\r\n        sienna: \"a0522d\",\r\n        silver: \"c0c0c0\",\r\n        skyblue: \"87ceeb\",\r\n        slateblue: \"6a5acd\",\r\n        slategray: \"708090\",\r\n        slategrey: \"708090\",\r\n        snow: \"fffafa\",\r\n        springgreen: \"00ff7f\",\r\n        steelblue: \"4682b4\",\r\n        tan: \"d2b48c\",\r\n        teal: \"008080\",\r\n        thistle: \"d8bfd8\",\r\n        tomato: \"ff6347\",\r\n        turquoise: \"40e0d0\",\r\n        violet: \"ee82ee\",\r\n        wheat: \"f5deb3\",\r\n        white: \"fff\",\r\n        whitesmoke: \"f5f5f5\",\r\n        yellow: \"ff0\",\r\n        yellowgreen: \"9acd32\"\r\n    };\r\n    \r\n    // Make it easy to access colors via `hexNames[hex]`\r\n    var hexNames = tinycolor.hexNames = flip(names);\r\n    \r\n    \r\n    // Utilities\r\n    // ---------\r\n    \r\n    // `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\r\n    function flip(o) {\r\n        var flipped = { };\r\n        for (var i in o) {\r\n            if (o.hasOwnProperty(i)) {\r\n                flipped[o[i]] = i;\r\n            }\r\n        }\r\n        return flipped;\r\n    }\r\n    \r\n    // Return a valid alpha value [0,1] with all invalid values being set to 1\r\n    function boundAlpha(a) {\r\n        a = parseFloat(a);\r\n    \r\n        if (isNaN(a) || a < 0 || a > 1) {\r\n            a = 1;\r\n        }\r\n    \r\n        return a;\r\n    }\r\n    \r\n    // Take input from [0, n] and return it as [0, 1]\r\n    function bound01(n, max) {\r\n        if (isOnePointZero(n)) { n = \"100%\"; }\r\n    \r\n        var processPercent = isPercentage(n);\r\n        n = mathMin(max, mathMax(0, parseFloat(n)));\r\n    \r\n        // Automatically convert percentage into number\r\n        if (processPercent) {\r\n            n = parseInt(n * max, 10) / 100;\r\n        }\r\n    \r\n        // Handle floating point rounding errors\r\n        if ((Math.abs(n - max) < 0.000001)) {\r\n            return 1;\r\n        }\r\n    \r\n        // Convert into [0, 1] range if it isn't already\r\n        return (n % max) / parseFloat(max);\r\n    }\r\n    \r\n    // Force a number between 0 and 1\r\n    function clamp01(val) {\r\n        return mathMin(1, mathMax(0, val));\r\n    }\r\n    \r\n    // Parse a base-16 hex value into a base-10 integer\r\n    function parseIntFromHex(val) {\r\n        return parseInt(val, 16);\r\n    }\r\n    \r\n    // Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\r\n    // <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\r\n    function isOnePointZero(n) {\r\n        return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\r\n    }\r\n    \r\n    // Check to see if string passed in is a percentage\r\n    function isPercentage(n) {\r\n        return typeof n === \"string\" && n.indexOf('%') != -1;\r\n    }\r\n    \r\n    // Force a hex value to have 2 characters\r\n    function pad2(c) {\r\n        return c.length == 1 ? '0' + c : '' + c;\r\n    }\r\n    \r\n    // Replace a decimal with it's percentage value\r\n    function convertToPercentage(n) {\r\n        if (n <= 1) {\r\n            n = (n * 100) + \"%\";\r\n        }\r\n    \r\n        return n;\r\n    }\r\n    \r\n    // Converts a decimal to a hex value\r\n    function convertDecimalToHex(d) {\r\n        return Math.round(parseFloat(d) * 255).toString(16);\r\n    }\r\n    // Converts a hex value to a decimal\r\n    function convertHexToDecimal(h) {\r\n        return (parseIntFromHex(h) / 255);\r\n    }\r\n    \r\n    var matchers = (function() {\r\n    \r\n        // <http://www.w3.org/TR/css3-values/#integers>\r\n        var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\r\n    \r\n        // <http://www.w3.org/TR/css3-values/#number-value>\r\n        var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\r\n    \r\n        // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\r\n        var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\r\n    \r\n        // Actual matching.\r\n        // Parentheses and commas are optional, but not required.\r\n        // Whitespace can take the place of commas or opening paren\r\n        var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\r\n        var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\r\n    \r\n        return {\r\n            CSS_UNIT: new RegExp(CSS_UNIT),\r\n            rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\r\n            rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\r\n            hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\r\n            hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\r\n            hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\r\n            hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\r\n            hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\r\n            hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\r\n            hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\r\n            hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\r\n        };\r\n    })();\r\n    \r\n    // `isValidCSSUnit`\r\n    // Take in a single string / number and check to see if it looks like a CSS unit\r\n    // (see `matchers` above for definition).\r\n    function isValidCSSUnit(color) {\r\n        return !!matchers.CSS_UNIT.exec(color);\r\n    }\r\n    \r\n    // `stringInputToObject`\r\n    // Permissive string parsing.  Take in a number of formats, and output an object\r\n    // based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\r\n    function stringInputToObject(color) {\r\n    \r\n        color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\r\n        var named = false;\r\n        if (names[color]) {\r\n            color = names[color];\r\n            named = true;\r\n        }\r\n        else if (color == 'transparent') {\r\n            return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\r\n        }\r\n    \r\n        // Try to match string input using regular expressions.\r\n        // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\r\n        // Just return an object and let the conversion functions handle that.\r\n        // This way the result will be the same whether the tinycolor is initialized with string or object.\r\n        var match;\r\n        if ((match = matchers.rgb.exec(color))) {\r\n            return { r: match[1], g: match[2], b: match[3] };\r\n        }\r\n        if ((match = matchers.rgba.exec(color))) {\r\n            return { r: match[1], g: match[2], b: match[3], a: match[4] };\r\n        }\r\n        if ((match = matchers.hsl.exec(color))) {\r\n            return { h: match[1], s: match[2], l: match[3] };\r\n        }\r\n        if ((match = matchers.hsla.exec(color))) {\r\n            return { h: match[1], s: match[2], l: match[3], a: match[4] };\r\n        }\r\n        if ((match = matchers.hsv.exec(color))) {\r\n            return { h: match[1], s: match[2], v: match[3] };\r\n        }\r\n        if ((match = matchers.hsva.exec(color))) {\r\n            return { h: match[1], s: match[2], v: match[3], a: match[4] };\r\n        }\r\n        if ((match = matchers.hex8.exec(color))) {\r\n            return {\r\n                r: parseIntFromHex(match[1]),\r\n                g: parseIntFromHex(match[2]),\r\n                b: parseIntFromHex(match[3]),\r\n                a: convertHexToDecimal(match[4]),\r\n                format: named ? \"name\" : \"hex8\"\r\n            };\r\n        }\r\n        if ((match = matchers.hex6.exec(color))) {\r\n            return {\r\n                r: parseIntFromHex(match[1]),\r\n                g: parseIntFromHex(match[2]),\r\n                b: parseIntFromHex(match[3]),\r\n                format: named ? \"name\" : \"hex\"\r\n            };\r\n        }\r\n        if ((match = matchers.hex4.exec(color))) {\r\n            return {\r\n                r: parseIntFromHex(match[1] + '' + match[1]),\r\n                g: parseIntFromHex(match[2] + '' + match[2]),\r\n                b: parseIntFromHex(match[3] + '' + match[3]),\r\n                a: convertHexToDecimal(match[4] + '' + match[4]),\r\n                format: named ? \"name\" : \"hex8\"\r\n            };\r\n        }\r\n        if ((match = matchers.hex3.exec(color))) {\r\n            return {\r\n                r: parseIntFromHex(match[1] + '' + match[1]),\r\n                g: parseIntFromHex(match[2] + '' + match[2]),\r\n                b: parseIntFromHex(match[3] + '' + match[3]),\r\n                format: named ? \"name\" : \"hex\"\r\n            };\r\n        }\r\n    \r\n        return false;\r\n    }\r\n    \r\n    function validateWCAG2Parms(parms) {\r\n        // return valid WCAG2 parms for isReadable.\r\n        // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\r\n        var level, size;\r\n        parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\r\n        level = (parms.level || \"AA\").toUpperCase();\r\n        size = (parms.size || \"small\").toLowerCase();\r\n        if (level !== \"AA\" && level !== \"AAA\") {\r\n            level = \"AA\";\r\n        }\r\n        if (size !== \"small\" && size !== \"large\") {\r\n            size = \"small\";\r\n        }\r\n        return {\"level\":level, \"size\":size};\r\n    }\r\n    \r\n    // Node: Export function\r\n    if ( true && module.exports) {\r\n        module.exports = tinycolor;\r\n    }\r\n    // AMD/requirejs: Define the module\r\n    else if (typeof define === 'function' && __webpack_require__.amdO) {\r\n        define(function () {return tinycolor;});\r\n    }\r\n    // Browser: Expose to window\r\n    else {\r\n        window.tinycolor = tinycolor;\r\n    }\r\n    \r\n    })(Math);\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (tinycolor);\n\n//# sourceURL=webpack://colorant/./src/js/modules/tinyColor.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/amd options */
/******/ 	(() => {
/******/ 		__webpack_require__.amdO = {};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/harmony module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.hmd = (module) => {
/******/ 			module = Object.create(module);
/******/ 			if (!module.children) module.children = [];
/******/ 			Object.defineProperty(module, 'exports', {
/******/ 				enumerable: true,
/******/ 				set: () => {
/******/ 					throw new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);
/******/ 				}
/******/ 			});
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/home.js");
/******/ 	
/******/ })()
;